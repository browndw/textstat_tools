{"title":"Lab 11","markdown":{"yaml":{"title":"Lab 11","author":"My Name","output":{"pdf_document":{"fig_caption":"yes","number_sections":true}},"header-includes":[""]},"headingText":"Lab 11 (Set 4): Time Series","headingAttr":{"id":"","classes":["unnumbered"],"keyvalue":[]},"containsRefs":false,"markdown":"\n\n```{r, include=FALSE}\nknitr::opts_chunk$set(\n  collapse = TRUE,\n  comment = \"#>\",\n  tidy.opts=list(width.cutoff=70),\n  tidy=TRUE\n)\n```\n\n\nFor this exercise, we going to make use two packages that can help us plot and manipulate dendrograms.\n\n```{r setup, message = FALSE, error=FALSE, warning=FALSE, echo=FALSE}\nlibrary(tidyverse)\nlibrary(dendextend)\nlibrary(ggdendro)\n```\n\nLoad the functions:\n\n```{r}\nsource(\"../R/google_ngrams.R\")\nsource(\"../R/vnc_functions.R\")\n```\n\n# Importing Google Ngrams Data\n\nWe won't do much with the google_ngram() function because most of Google data table are HUGE. Though they are formatted as simple tab-delimited text files, they often run in the multiple gigabytes in size. You can access them here:\n\n<http://storage.googleapis.com/books/ngrams/books/datasetsv2.html>\n\nWith that in mind, we'll do a simple demo of the function with one of the smaller 1-gram tables: Q. First, we'll make a vector of the word forms we want to count. In this case, we'll count 3 common forms of *quiz*.\n\n```{r message = FALSE, error=FALSE, warning=FALSE, results='hide'}\nwfs <- c(\"quiz\", \"quizzes\", \"quizzed\")\nq <- google_ngram(wfs, variety = \"eng\", by = \"year\")\n```\n\nNote that before we plot, we should check for gaps -- in other words, years when counts are not in the data and, thus, zero. We can use the **is.sequence()** function.\n\nHere we'll check the full **Year** column and only years after 1799.\n\n```{r}\nq$Year %>% is.sequence()\nq$Year[q$Year > 1799] %>% is.sequence()\n```\n\n# Peaks and Troughs\n\nIf we wanted to plot from the first instance (1515) onward, we would need to fill in the all missing years (rows) with zero values. We would also want to check the underlying data. A quick search of Google Books seems to suggest that sixteenth century examples come from passages that are not in English and often in the form *qu'iz*.\n\nInstead, we will plot only data from 1800 and after. And we can plot the data with a confidence interval to identify \"peaks and troughs\" (Brezina pgs. 241-247).\n\n```{r quiz_year, warning=F, fig.height=4, fig.width=7, fig.cap=\"Frequencies (per million words) of lemmatized \\\\textit{quiz} from the 18th through the 20th centuries.\"}\n\nggplot(q %>% filter(Year > 1799), aes(x=Year, y=Per_10.6)) +\n    geom_point(size = .5) +\n    geom_smooth(method = \"gam\", formula = y ~ s(x, bs = \"cs\"), size=.25) +\n    labs(x=\"Year\", y = \"Frequency (per million words)\")+ \n    theme(panel.grid.minor.x=element_blank(),\n          panel.grid.major.x=element_blank()) +\n    theme(panel.grid.minor.y =   element_blank(),\n          panel.grid.major.y =   element_line(colour = \"gray\",size=0.25)) +\n    theme(rect = element_blank()) +\n    theme(legend.title=element_blank())\n```\n\nWe can also aggregate the counts by decade.\n\n```{r message = FALSE, error=FALSE, warning=FALSE, results='hide'}\nq <- google_ngram(wfs, variety = \"eng\", by = \"decade\")\n```\n\n```{r quiz_decade, warning=F, fig.height=4, fig.width=7, fig.cap=\"Frequencies by decade (per million words) of lemmatized \\\\textit{quiz} from the 18th through the 20th centuries.\"}\nggplot(q %>% filter(Decade > 1799), aes(x=Decade, y=Per_10.6)) +\n    geom_bar(stat = \"identity\") +\n    labs(x=\"Decade\", y = \"Frequency (per million words)\")+ \n    theme(panel.grid.minor.x=element_blank(),\n          panel.grid.major.x=element_blank()) +\n    theme(panel.grid.minor.y =   element_blank(),\n          panel.grid.major.y =   element_line(colour = \"gray\",size=0.25)) +\n    theme(rect = element_blank()) +\n    theme(legend.title=element_blank())\n```\n\n## Confidence Intervals\n\nTo add confidence intervals to a bar plot, we need to calculate the upper and lower bounds. For this we'll use the **prop.cint()** from the **corpora** package:\n\n<https://www.rdocumentation.org/packages/corpora/versions/0.5/topics/prop.cint>\n\nWe only need to pass the function a vector of frequencies and a vector of total counts (corpus sizes). We'll bind those to a new data frame and normalize per million tokens.\n\n```{r}\nword_freq <- q %>% \n  bind_cols(corpora::prop.cint(k = q$AF, n = q$Total, conf.level = 0.95)) %>%\n  mutate(lower = lower*1000000) %>%\n  mutate(upper = upper*1000000)\n```\n\nAnd plot adding **geom_errorbar()**\n\n```{r quiz_ci, fig.height=4, fig.width=7, fig.cap=\"Frequencies by decade (per million words and with 95% confidence intervals) of lemmatized \\\\textit{quiz} from the 18th through the 20th centuries.\"}\nggplot(word_freq %>% filter(Decade > 1799), aes(x=Decade, y=Per_10.6)) +\n    geom_bar(stat = \"identity\", fill=\"steelblue\") +\n    geom_errorbar(aes(ymin=lower, ymax=upper), width=.1) +\n    labs(x=\"Decade\", y = \"Frequency (per million words)\") + \n    theme(panel.grid.minor.x=element_blank(),\n          panel.grid.major.x=element_blank()) +\n    theme(panel.grid.minor.y =   element_blank(),\n          panel.grid.major.y =   element_line(colour = \"gray\",size=0.25)) +\n    theme(rect = element_blank()) +\n    theme(legend.title=element_blank())\n```\n\n# Periodization\n\nJust eyeballing the data, it looks like there might be some interesting changes in frequency in the middle of the 20th century, and late in the 20th century.\n\nTo better understand how these changes group together (what is called \"periodization\") we can turn turn Variability-Based Neighbor clustering.\n\nWe're going take data for the 20th century onward and begin with a scree plot.\n\n```{r}\nq <- q %>% filter(Decade > 1899)\n```\n\n```{r quiz_scree, fig.height=3.5, fig.width=7, fig.cap=\"Scree plot of standard deviations for lemmatized \\\\textit{quiz}.\"}\nvnc_scree(q$Decade, q$Per_10.6)\n```\n\nFrom the scree plot, it looks like we have 2-3 well-formed clusters. Now, we'll generate the data for our dendrogram. Keep in mind this is a very specific implementation of hierarchical clustering as we need to maintain the order of our time series.\n\nThe distance is based on standard deviations of sequential pairs of time intervals. Alternatively, you can set the distance.measure to \"cv\" for to use the coefficient of variation.\n\n```{r quiz_vnc, fig.height=4, fig.width=7, fig.cap=\"VNC dendrogram showing frequencies of lemmatized \\\\textit{quiz} in 20th century English.\"}\nhc <- vnc_clust(q$Decade, q$Per_10.6, distance.measure = \"sd\")\nplot(hc, hang = -1, main = \"\", sub = \"\", xlab = \"\")\n```\n\nThe purpose of Variability-Based Neighbor Clustering is to divide the use of a word or phrase into historical periods based on changes in frequency. Rather than assuming that a year, decade, or other division is statistically meaningful, the algorithm clusters segments of time into periods.\n\nNow let's look at some other data: frequencies of the bigram *witch hunt* and the plural *witch hunts*. These also comes from Google Books. You can gather the data yourself at a later time using **google_ngram()**, if you want, but for the purposes of this exercise we'll skip that step to save time.\n\n```{r, fig.height=3.5, fig.width=7, fig.cap=\"Scree plot of standard deviations for lemmatized \\\\textit{witch hunt}.\"}\nwh <- vnc::witch_hunt %>%\n  filter(decade > 1899) %>% \n  dplyr::select(decade, counts_permil)\n\nvnc_scree(wh$decade, wh$counts_permil, distance.measure = \"sd\")\n```\n\n\n```{r wh_vnc, fig.height=4, fig.width=7, fig.cap=\"VNC dendrogram showing frequencies of lemmatized \\\\textit{witch hunt} in 20th century English.\"}\nhc <- vnc_clust(wh$decade, wh$counts_permil, distance.measure = \"sd\")\n```\n\nFor the next step, we’ll cut the dendrogram into 3 clusters based on the output of the scree plot we that generated. Note that we’re storing the output into a list **cut_hc**.\n\n```{r wh_cut, fig.height=4, fig.width=7, fig.cap=\"VNC dendrogram showing frequencies of lemmatized \\\\textit{witch hunt} in 20th century English.y cut into 3 clusters.\"}\nplot(hc, hang = -1)\ncut_hc <- rect.hclust(hc, k=3)\n```\n\n___\n\\begin{center}\nSTOP!\\\\\nCOMPLETE TASK 1\n\\end{center} \n___\n\n## Advanced plotting\n\nWe’ve already plotted our data with base R. However, if we want more control, we probably want to use ggplot2. To do that, we need to go through a couple of intermediate steps. First, convert the cut_hc object that we just generated into a data frame and join that with our original **witch hunt** data.\n\n```{r}\nclust_df <- data.frame(decade=as.numeric(names(unlist(cut_hc))),\n  clust=rep(c(paste0(\"clust_\", seq(1:length(cut_hc)))),\n  times=sapply(cut_hc,length)))\n\nclust_df <- clust_df %>% right_join(wh, by = \"decade\")\n```\n\nNext, we’ll convert our cluster data into dendrogram data using as.dendrogram( ) from ggdendro. We also MUST maintain the order of our time series. There are a variety of ways of doing this, but dendextend has an easy function called **sort()**. We’ll take the easy way!\n\nTo get ggplot-friendly data, we have to transform it yet again… This time using the **ggdendro** package’s function **dendro_data()**.\n\n```{r}\ndend <- as.dendrogram(hc) %>% sort\ndend_data <- dendro_data(dend, type = \"rectangle\")\n```\n\nNow let’s do some fancy plotting! We’re going to combine the dendrogram and a time series line plot like Gries and Hilpert do on pg. 140 of their chapter on VNC.\n\nThe first three lines pull data from clust_df for the line plot using the clusters to color each point according to group. The geom_segment pulls data from dend_data to build the dendrogram. For the tick marks we again pull from **dend_data** using the x column for the breaks and and the label column to label the breaks.\n\n```{r wh_overlay, fig.height=4, fig.width=7, fig.cap=\"VNC dendrogram showing frequencies of lemmatized \\\\textit{witch hunt} in 20th century English.y cut into 3 clusters.\"}\nggplot(clust_df, aes(x = as.numeric(rownames(clust_df)), y = counts_permil)) +\n  geom_line(linetype = \"dotted\") +\n  geom_point(aes(color = clust), size = 2) +\n  geom_segment(data = dend_data$segments, aes(x = x, y = y, xend = xend, yend = yend))+\n  scale_x_continuous(breaks = dend_data$labels$x,\n    labels=as.character(dend_data$labels$label)) +\n  xlab(\"\") + ylab(\"Frequency (per million words)\") +\n  theme_minimal()\n```\n\n","srcMarkdownNoYaml":"\n\n```{r, include=FALSE}\nknitr::opts_chunk$set(\n  collapse = TRUE,\n  comment = \"#>\",\n  tidy.opts=list(width.cutoff=70),\n  tidy=TRUE\n)\n```\n\n# Lab 11 (Set 4): Time Series {-}\n\nFor this exercise, we going to make use two packages that can help us plot and manipulate dendrograms.\n\n```{r setup, message = FALSE, error=FALSE, warning=FALSE, echo=FALSE}\nlibrary(tidyverse)\nlibrary(dendextend)\nlibrary(ggdendro)\n```\n\nLoad the functions:\n\n```{r}\nsource(\"../R/google_ngrams.R\")\nsource(\"../R/vnc_functions.R\")\n```\n\n# Importing Google Ngrams Data\n\nWe won't do much with the google_ngram() function because most of Google data table are HUGE. Though they are formatted as simple tab-delimited text files, they often run in the multiple gigabytes in size. You can access them here:\n\n<http://storage.googleapis.com/books/ngrams/books/datasetsv2.html>\n\nWith that in mind, we'll do a simple demo of the function with one of the smaller 1-gram tables: Q. First, we'll make a vector of the word forms we want to count. In this case, we'll count 3 common forms of *quiz*.\n\n```{r message = FALSE, error=FALSE, warning=FALSE, results='hide'}\nwfs <- c(\"quiz\", \"quizzes\", \"quizzed\")\nq <- google_ngram(wfs, variety = \"eng\", by = \"year\")\n```\n\nNote that before we plot, we should check for gaps -- in other words, years when counts are not in the data and, thus, zero. We can use the **is.sequence()** function.\n\nHere we'll check the full **Year** column and only years after 1799.\n\n```{r}\nq$Year %>% is.sequence()\nq$Year[q$Year > 1799] %>% is.sequence()\n```\n\n# Peaks and Troughs\n\nIf we wanted to plot from the first instance (1515) onward, we would need to fill in the all missing years (rows) with zero values. We would also want to check the underlying data. A quick search of Google Books seems to suggest that sixteenth century examples come from passages that are not in English and often in the form *qu'iz*.\n\nInstead, we will plot only data from 1800 and after. And we can plot the data with a confidence interval to identify \"peaks and troughs\" (Brezina pgs. 241-247).\n\n```{r quiz_year, warning=F, fig.height=4, fig.width=7, fig.cap=\"Frequencies (per million words) of lemmatized \\\\textit{quiz} from the 18th through the 20th centuries.\"}\n\nggplot(q %>% filter(Year > 1799), aes(x=Year, y=Per_10.6)) +\n    geom_point(size = .5) +\n    geom_smooth(method = \"gam\", formula = y ~ s(x, bs = \"cs\"), size=.25) +\n    labs(x=\"Year\", y = \"Frequency (per million words)\")+ \n    theme(panel.grid.minor.x=element_blank(),\n          panel.grid.major.x=element_blank()) +\n    theme(panel.grid.minor.y =   element_blank(),\n          panel.grid.major.y =   element_line(colour = \"gray\",size=0.25)) +\n    theme(rect = element_blank()) +\n    theme(legend.title=element_blank())\n```\n\nWe can also aggregate the counts by decade.\n\n```{r message = FALSE, error=FALSE, warning=FALSE, results='hide'}\nq <- google_ngram(wfs, variety = \"eng\", by = \"decade\")\n```\n\n```{r quiz_decade, warning=F, fig.height=4, fig.width=7, fig.cap=\"Frequencies by decade (per million words) of lemmatized \\\\textit{quiz} from the 18th through the 20th centuries.\"}\nggplot(q %>% filter(Decade > 1799), aes(x=Decade, y=Per_10.6)) +\n    geom_bar(stat = \"identity\") +\n    labs(x=\"Decade\", y = \"Frequency (per million words)\")+ \n    theme(panel.grid.minor.x=element_blank(),\n          panel.grid.major.x=element_blank()) +\n    theme(panel.grid.minor.y =   element_blank(),\n          panel.grid.major.y =   element_line(colour = \"gray\",size=0.25)) +\n    theme(rect = element_blank()) +\n    theme(legend.title=element_blank())\n```\n\n## Confidence Intervals\n\nTo add confidence intervals to a bar plot, we need to calculate the upper and lower bounds. For this we'll use the **prop.cint()** from the **corpora** package:\n\n<https://www.rdocumentation.org/packages/corpora/versions/0.5/topics/prop.cint>\n\nWe only need to pass the function a vector of frequencies and a vector of total counts (corpus sizes). We'll bind those to a new data frame and normalize per million tokens.\n\n```{r}\nword_freq <- q %>% \n  bind_cols(corpora::prop.cint(k = q$AF, n = q$Total, conf.level = 0.95)) %>%\n  mutate(lower = lower*1000000) %>%\n  mutate(upper = upper*1000000)\n```\n\nAnd plot adding **geom_errorbar()**\n\n```{r quiz_ci, fig.height=4, fig.width=7, fig.cap=\"Frequencies by decade (per million words and with 95% confidence intervals) of lemmatized \\\\textit{quiz} from the 18th through the 20th centuries.\"}\nggplot(word_freq %>% filter(Decade > 1799), aes(x=Decade, y=Per_10.6)) +\n    geom_bar(stat = \"identity\", fill=\"steelblue\") +\n    geom_errorbar(aes(ymin=lower, ymax=upper), width=.1) +\n    labs(x=\"Decade\", y = \"Frequency (per million words)\") + \n    theme(panel.grid.minor.x=element_blank(),\n          panel.grid.major.x=element_blank()) +\n    theme(panel.grid.minor.y =   element_blank(),\n          panel.grid.major.y =   element_line(colour = \"gray\",size=0.25)) +\n    theme(rect = element_blank()) +\n    theme(legend.title=element_blank())\n```\n\n# Periodization\n\nJust eyeballing the data, it looks like there might be some interesting changes in frequency in the middle of the 20th century, and late in the 20th century.\n\nTo better understand how these changes group together (what is called \"periodization\") we can turn turn Variability-Based Neighbor clustering.\n\nWe're going take data for the 20th century onward and begin with a scree plot.\n\n```{r}\nq <- q %>% filter(Decade > 1899)\n```\n\n```{r quiz_scree, fig.height=3.5, fig.width=7, fig.cap=\"Scree plot of standard deviations for lemmatized \\\\textit{quiz}.\"}\nvnc_scree(q$Decade, q$Per_10.6)\n```\n\nFrom the scree plot, it looks like we have 2-3 well-formed clusters. Now, we'll generate the data for our dendrogram. Keep in mind this is a very specific implementation of hierarchical clustering as we need to maintain the order of our time series.\n\nThe distance is based on standard deviations of sequential pairs of time intervals. Alternatively, you can set the distance.measure to \"cv\" for to use the coefficient of variation.\n\n```{r quiz_vnc, fig.height=4, fig.width=7, fig.cap=\"VNC dendrogram showing frequencies of lemmatized \\\\textit{quiz} in 20th century English.\"}\nhc <- vnc_clust(q$Decade, q$Per_10.6, distance.measure = \"sd\")\nplot(hc, hang = -1, main = \"\", sub = \"\", xlab = \"\")\n```\n\nThe purpose of Variability-Based Neighbor Clustering is to divide the use of a word or phrase into historical periods based on changes in frequency. Rather than assuming that a year, decade, or other division is statistically meaningful, the algorithm clusters segments of time into periods.\n\nNow let's look at some other data: frequencies of the bigram *witch hunt* and the plural *witch hunts*. These also comes from Google Books. You can gather the data yourself at a later time using **google_ngram()**, if you want, but for the purposes of this exercise we'll skip that step to save time.\n\n```{r, fig.height=3.5, fig.width=7, fig.cap=\"Scree plot of standard deviations for lemmatized \\\\textit{witch hunt}.\"}\nwh <- vnc::witch_hunt %>%\n  filter(decade > 1899) %>% \n  dplyr::select(decade, counts_permil)\n\nvnc_scree(wh$decade, wh$counts_permil, distance.measure = \"sd\")\n```\n\n\n```{r wh_vnc, fig.height=4, fig.width=7, fig.cap=\"VNC dendrogram showing frequencies of lemmatized \\\\textit{witch hunt} in 20th century English.\"}\nhc <- vnc_clust(wh$decade, wh$counts_permil, distance.measure = \"sd\")\n```\n\nFor the next step, we’ll cut the dendrogram into 3 clusters based on the output of the scree plot we that generated. Note that we’re storing the output into a list **cut_hc**.\n\n```{r wh_cut, fig.height=4, fig.width=7, fig.cap=\"VNC dendrogram showing frequencies of lemmatized \\\\textit{witch hunt} in 20th century English.y cut into 3 clusters.\"}\nplot(hc, hang = -1)\ncut_hc <- rect.hclust(hc, k=3)\n```\n\n___\n\\begin{center}\nSTOP!\\\\\nCOMPLETE TASK 1\n\\end{center} \n___\n\n## Advanced plotting\n\nWe’ve already plotted our data with base R. However, if we want more control, we probably want to use ggplot2. To do that, we need to go through a couple of intermediate steps. First, convert the cut_hc object that we just generated into a data frame and join that with our original **witch hunt** data.\n\n```{r}\nclust_df <- data.frame(decade=as.numeric(names(unlist(cut_hc))),\n  clust=rep(c(paste0(\"clust_\", seq(1:length(cut_hc)))),\n  times=sapply(cut_hc,length)))\n\nclust_df <- clust_df %>% right_join(wh, by = \"decade\")\n```\n\nNext, we’ll convert our cluster data into dendrogram data using as.dendrogram( ) from ggdendro. We also MUST maintain the order of our time series. There are a variety of ways of doing this, but dendextend has an easy function called **sort()**. We’ll take the easy way!\n\nTo get ggplot-friendly data, we have to transform it yet again… This time using the **ggdendro** package’s function **dendro_data()**.\n\n```{r}\ndend <- as.dendrogram(hc) %>% sort\ndend_data <- dendro_data(dend, type = \"rectangle\")\n```\n\nNow let’s do some fancy plotting! We’re going to combine the dendrogram and a time series line plot like Gries and Hilpert do on pg. 140 of their chapter on VNC.\n\nThe first three lines pull data from clust_df for the line plot using the clusters to color each point according to group. The geom_segment pulls data from dend_data to build the dendrogram. For the tick marks we again pull from **dend_data** using the x column for the breaks and and the label column to label the breaks.\n\n```{r wh_overlay, fig.height=4, fig.width=7, fig.cap=\"VNC dendrogram showing frequencies of lemmatized \\\\textit{witch hunt} in 20th century English.y cut into 3 clusters.\"}\nggplot(clust_df, aes(x = as.numeric(rownames(clust_df)), y = counts_permil)) +\n  geom_line(linetype = \"dotted\") +\n  geom_point(aes(color = clust), size = 2) +\n  geom_segment(data = dend_data$segments, aes(x = x, y = y, xend = xend, yend = yend))+\n  scale_x_continuous(breaks = dend_data$labels$x,\n    labels=as.character(dend_data$labels$label)) +\n  xlab(\"\") + ylab(\"Frequency (per million words)\") +\n  theme_minimal()\n```\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":{"pdf_document":{"fig_caption":"yes","number_sections":true}},"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","output-file":"Lab_11.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.549","editor":"visual","title":"Lab 11","author":"My Name","header-includes":[""]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":[]}