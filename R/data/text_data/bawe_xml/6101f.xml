<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE TEI.2 SYSTEM "tei_bawe.dtd">
<TEI.2 id="_6101f" n="version 1.0">
<teiHeader>
<fileDesc>
<titleStmt>
<title>Compiler</title>
</titleStmt>
<extent/>
<publicationStmt>
<distributor>British Academic Written English (BAWE) corpus</distributor>
<availability>
<p>The British Academic Written English (BAWE) corpus was developed at the Universities of Warwick, Reading and Oxford Brookes, under the directorship of Hilary Nesi and Sheena Gardner (formerly of the Centre for Applied Linguistics [previously called CELTE], Warwick), Paul Thompson (Department of Applied Linguistics, Reading) and Paul Wickens (Westminster Institute of Education, Oxford Brookes), with funding from the ESRC. Subject to the rights of the these institutions in the BAWE corpus, and pursuant to the ESRC agreement, the BAWE corpus is available to researchers for research purposes PROVIDED THAT the following conditions are met:</p>
<p>1. The corpus files are not distributed in either their original form or in modified form.</p>
<p>2. The texts are used for research purposes only; they should not be reproduced in teaching materials.</p>
<p>3. The texts are not reproduced in full for a wider audience/readership, although researchers are free to quote short passages of text (up to 200 running words from any given text).</p>
<p>4. The BAWE corpus developers (contact: BAWE@warwick.ac.uk) are informed of all projects, dissertations, theses, presentations or publications arising from analysis of the corpus.</p>
<p>5. Researchers acknowledge their use of the corpus using the following form of words: "The data in this study come from the British Academic Written English (BAWE) corpus, which was developed at the Universities of Warwick, Reading and Oxford Brookes under the directorship of Hilary Nesi and Sheena Gardner (formerly of the Centre for Applied Linguistics [previously called CELTE], Warwick), Paul Thompson (Department of Applied Linguistics, Reading) and Paul Wickens (Westminster Institute of Education, Oxford Brookes), with funding from the ESRC (RES-000-23-0800)."</p>
</availability>
</publicationStmt>
<notesStmt>
<note resp="British Academic Written English (BAWE) corpus project">Page header contains: student name. Page footer contains: page number. </note>
</notesStmt>
<sourceDesc>
<p n="level">2</p>
<p n="date">2004-12</p>
<p n="module title">C and Compilers</p>
<p n="module code">CS2A2</p>
<p n="genre family">Design specification</p>
<p n="discipline">Computer Science</p>
<p n="disciplinary group">PS</p>
<p n="grade">D</p>
<p n="number of authors">1</p>
<p n="number of words">465</p>
<p n="number of s-units">40</p>
<p n="number of p">28</p>
<p n="number of tables">0</p>
<p n="number of figures">5</p>
<p n="number of block quotes">0</p>
<p n="number of formulae">3</p>
<p n="number of lists">0</p>
<p n="number of paragraphs formatted like lists">0</p>
<p n="abstract present">no abstract</p>
<p n="average words per s-unit">11.6</p>
<p n="average s-units per p">1.4</p>
<p n="macrotype of assignment">simple assignment</p>
</sourceDesc>
</fileDesc>
<encodingDesc>
<p>TEI P4 (documented in: BAWE.documentation.pdf)</p>
</encodingDesc>
<profileDesc>
<particDesc>
<person>
<p n="gender">m</p>
<p n="year of birth">1984</p>
<p n="first language">English</p>
<p n="education">UKa</p>
<p n="course">Computer Science</p>
<p n="student ID">6101</p>
</person>
</particDesc>
</profileDesc>
</teiHeader>
<text>
<front>
<titlePage>
<docTitle>
<titlePart rend="bold">Compiler</titlePart>
</docTitle>
</titlePage>
</front>
<body>
<div1 type="section">
<head rend="bold">Introduction and Capabilities</head>
<p n="p1.28">
<s n="s1.1;p1.28">This is a compiler; implemented in C++, which compiles C code into C compatible three-address code. </s>
</p>
<p n="p2.28">
<s n="s1.2;p2.28">It takes as a parameter the filename of a source file, and outputs both to the screen and to the file "output.txt". </s>
<s n="s2.2;p2.28">If the code compiled successfully, the compiler will return a 0, otherwise it will return a 1. </s>
</p>
<p n="p3.28">
<s n="s1.2;p3.28">The compiler's scope currently is the declaration of integer variables with user specified names, the functions in() and out(), and any assignment to a variable of an expression containing variables and/or positive and/or negative integers connected with (, ), +, -, *, /, ++, +=, -- and/or -=. </s>
<s n="s2.2;p3.28">White space, including new lines and tabs, is stripped. </s>
</p>
<p n="p4.28">
<s n="s1.1;p4.28">From this, it generates C three-address code using temporary variables, which is then put recursively through 8 levels of optimisation. </s>
</p>
<p n="p5.28">
<s n="s1.1;p5.28">Both outputs of this (screen and file) are separated back out with new lines to make it easier for the user to read. </s>
</p>
</div1>
<div1 type="section">
<head rend="bold">Brief Code Description</head>
<p n="p6.28">
<s n="s1.3;p6.28">The code is split up into source files, each with a header. </s>
<s n="s2.3;p6.28">The header contains global variables, definitions and function prototypes. </s>
<s n="s3.3;p6.28">The comments explaining the purpose of each of these are located in the header file, not in the source code. </s>
</p>
<p n="p7.28">
<s n="s1.1;p7.28">P.T.O </s>
</p>
<p n="p8.28">
<s n="s1.1;p8.28">Here, briefly, are the important points in the flow of control through the program: </s>
</p>
<figure id="BAWE_6101f-fig.001"/>
</div1>
<div1 type="section">
<head rend="bold">Test Strategy</head>
<p n="p9.28">
<s n="s1.5;p9.28">I tested the program many hundreds of times throughout the coding to test every new piece of code. </s>
<s n="s2.5;p9.28">Therefore by the end of the code writing process I was able to be fairly sure that the compiler worked. </s>
<s n="s3.5;p9.28">I still ran 15 tests of the compiler both with and without optimisation to verify that the compiler does indeed work. </s>
<s n="s4.5;p9.28">All of these tests were successful. </s>
<s n="s5.5;p9.28">Some of the results follow. </s>
</p>
</div1>
<div1 type="section">
<head rend="bold">Test Results</head>
<div2>
<head rend="bold">Test lexical analysis</head>
<p n="p10.28">
<s n="s1.1;p10.28">Input: </s>
</p>
<p n="p11.28">
<s n="s1.1;p11.28">
<formula notation="" id="BAWE_6101f-form.001"/> </s>
</p>
<p n="p12.28">
<s n="s1.1;p12.28">Output 1 (without optimisation): </s>
</p>
<figure id="BAWE_6101f-pic.001"/>
<p n="p13.28">
<s n="s1.1;p13.28">Output 2 (with optimisation): </s>
</p>
<figure id="BAWE_6101f-pic.002"/>
<p n="p14.28">
<s n="s1.1;p14.28">Result: </s>
</p>
<p n="p15.28">
<s n="s1.2;p15.28">By following through the input, one can see that both outputs are equivalent to it. </s>
<s n="s2.2;p15.28">As the code was designed to be a strenuous test to the lexical analyser, its success is valid. </s>
</p>
</div2>
<div2>
<head rend="bold">Testing parsing. </head>
<p n="p16.28">
<s n="s1.1;p16.28">Input: </s>
</p>
<p n="p17.28">
<s n="s1.1;p17.28">
<formula notation="" id="BAWE_6101f-form.002"/> </s>
</p>
<p n="p18.28">
<s n="s1.1;p18.28">Output 1 (without optimisation): </s>
</p>
<figure id="BAWE_6101f-pic.003"/>
<p n="p19.28">
<s n="s1.1;p19.28">Output 2 (with optimisation): </s>
</p>
<figure id="BAWE_6101f-pic.004"/>
<p n="p20.28">
<s n="s1.1;p20.28">Result: </s>
</p>
<p n="p21.28">
<s n="s1.2;p21.28">You can mentally convert the input code to output 1 successfully, therefore the parsing, and especially the postfix code seems to work. </s>
<s n="s2.2;p21.28">Manual calculation confirms that the code should output - 42, so both parts of the test were a success. </s>
</p>
</div2>
<div2>
<head rend="bold">Testing optimisation as a whole. </head>
<p n="p22.28">
<s n="s1.1;p22.28">Input: </s>
</p>
<p n="p23.28">
<s n="s1.1;p23.28">
<formula notation="" id="BAWE_6101f-form.003"/> </s>
</p>
<p n="p24.28">
<s n="s1.1;p24.28">Output: </s>
</p>
<figure id="BAWE_6101f-pic.005"/>
<p n="p25.28">
<s n="s1.1;p25.28">Result: </s>
</p>
<p n="p26.28">
<s n="s1.2;p26.28">This code was the code used as an example of optimisation in the notes. </s>
<s n="s2.2;p26.28">It therefore tests every stage of optimisation. </s>
</p>
<p n="p27.28">
<s n="s1.2;p27.28">I did not use it as an input for any tests while writing the code. </s>
<s n="s2.2;p27.28">Apart from the names of the variables, the result is exactly that of the notes, therefore the test is a success. </s>
</p>
</div2>
</div1>
<div1 type="section">
<head rend="bold">Code</head>
<p n="p28.28">
<s n="s1.1;p28.28">Please see separate attachment. </s>
</p>
</div1>
</body>
<back/>
</text>
</TEI.2>
