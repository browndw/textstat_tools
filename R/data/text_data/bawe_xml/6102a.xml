<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE TEI.2 SYSTEM "tei_bawe.dtd">
<TEI.2 id="_6102a" n="version 1.0">
<teiHeader>
<fileDesc>
<titleStmt>
<title>[Report for Artificial Intelligence]</title>
</titleStmt>
<extent/>
<publicationStmt>
<distributor>British Academic Written English (BAWE) corpus</distributor>
<availability>
<p>The British Academic Written English (BAWE) corpus was developed at the Universities of Warwick, Reading and Oxford Brookes, under the directorship of Hilary Nesi and Sheena Gardner (formerly of the Centre for Applied Linguistics [previously called CELTE], Warwick), Paul Thompson (Department of Applied Linguistics, Reading) and Paul Wickens (Westminster Institute of Education, Oxford Brookes), with funding from the ESRC. Subject to the rights of the these institutions in the BAWE corpus, and pursuant to the ESRC agreement, the BAWE corpus is available to researchers for research purposes PROVIDED THAT the following conditions are met:</p>
<p>1. The corpus files are not distributed in either their original form or in modified form.</p>
<p>2. The texts are used for research purposes only; they should not be reproduced in teaching materials.</p>
<p>3. The texts are not reproduced in full for a wider audience/readership, although researchers are free to quote short passages of text (up to 200 running words from any given text).</p>
<p>4. The BAWE corpus developers (contact: BAWE@warwick.ac.uk) are informed of all projects, dissertations, theses, presentations or publications arising from analysis of the corpus.</p>
<p>5. Researchers acknowledge their use of the corpus using the following form of words: "The data in this study come from the British Academic Written English (BAWE) corpus, which was developed at the Universities of Warwick, Reading and Oxford Brookes under the directorship of Hilary Nesi and Sheena Gardner (formerly of the Centre for Applied Linguistics [previously called CELTE], Warwick), Paul Thompson (Department of Applied Linguistics, Reading) and Paul Wickens (Westminster Institute of Education, Oxford Brookes), with funding from the ESRC (RES-000-23-0800)."</p>
</availability>
</publicationStmt>
<notesStmt>
<note resp="British Academic Written English (BAWE) corpus project">The document has a title page which contains:document titletitle part</note>
<note resp="British Academic Written English (BAWE) corpus project">Page header contains: module title; student name. Page footer contains: page number. </note>
</notesStmt>
<sourceDesc>
<p n="level">3</p>
<p n="date">2006-05</p>
<p n="module title">Artificial Intelligence</p>
<p n="module code">CS3W2</p>
<p n="genre family">Critique</p>
<p n="discipline">Computer Science</p>
<p n="disciplinary group">PS</p>
<p n="grade">M</p>
<p n="number of authors">1</p>
<p n="number of words">870</p>
<p n="number of s-units">41</p>
<p n="number of p">16</p>
<p n="number of tables">0</p>
<p n="number of figures">2</p>
<p n="number of block quotes">0</p>
<p n="number of formulae">4</p>
<p n="number of lists">0</p>
<p n="number of paragraphs formatted like lists">0</p>
<p n="abstract present">no abstract</p>
<p n="average words per s-unit">21.2</p>
<p n="average s-units per p">2.6</p>
<p n="macrotype of assignment">simple assignment</p>
</sourceDesc>
</fileDesc>
<encodingDesc>
<p>TEI P4 (documented in: BAWE.documentation.pdf)</p>
</encodingDesc>
<profileDesc>
<particDesc>
<person>
<p n="gender">m</p>
<p n="year of birth">1983</p>
<p n="first language">Chinese unspecified</p>
<p n="education">OSa</p>
<p n="course">MEng</p>
<p n="student ID">6102</p>
</person>
</particDesc>
</profileDesc>
</teiHeader>
<text>
<front>
<titlePage>
<docTitle>
<titlePart rend="bold">Report for Artificial Intelligence (CS3W2)</titlePart>
</docTitle>
<titlePart>
<hi rend="bold">
<name type="student name"/> MEng Computer Science and Cybernetics</hi> <hi rend="bold">
<name type="other"/> Lecturer: <name type="tutor name"/>
</hi>
</titlePart>
</titlePage>
</front>
<body>
<div1 type="section">
<head rend="bold">Introduction</head>
<p n="p1.16">
<s n="s1.5;p1.16">Blocks-World Management that is playing a far vital role in the development of Artificial Intelligence (AI) is expected to be constructed in this project. </s>
<s n="s2.5;p1.16">The management should be an interface between user and blocks-world so that all the commands from user can cause the specified actions among the elements of blocks-world. </s>
<s n="s3.5;p1.16">Some AI concept should be involved into the operation of making structure and search method. </s>
<s n="s4.5;p1.16">In this report two methods are implemented in C++ to establish blocks-world management, one is trying to build a dynamic blocks world and operate objects in it and the other focuses on the search method for some specified blocks world. </s>
<s n="s5.5;p1.16">Unfortunately, so far, this search method can not be successfully combined into the blocks world management programming, but the research work associated with the effort on them are illustrated in this report </s>
</p>
</div1>
<div1 type="section">
<head rend="bold">Method and Implement</head>
<div2>
<head rend="italic">Approach 1</head>
<p n="p2.16">
<s n="s1.5;p2.16">In the Blocks World management, the user is allowed to dynamically add objects to the blocks world. </s>
<s n="s2.5;p2.16">The Matrix which is of type block is made to store and display the blocks. </s>
<s n="s3.5;p2.16">The line stands for the each stack and the row stands for the height of each stack. </s>
<s n="s4.5;p2.16">Each block in the matrix has ID number, color and shape. </s>
<s n="s5.5;p2.16">When a new block is added in, it will be given an ID number with its specified shape and color then put into the matrix associated with the "on(A,B)" and "ontable" function to build blocks world. </s>
</p>
<p n="p3.16">
<s n="s1.1;p3.16">When user input the command to operate the objects in blocks world, the position of blocks which are engaged in "void blockstack(int A, int B)" and "void blockunstack(int A, int B)" function can be found by "searchxy" function, which using depth-first-search method. </s>
</p>
<p n="p4.16">
<s n="s1.1;p4.16">
<formula notation="" id="BAWE_6102a-form.001"/> </s>
</p>
<p n="p5.16">
<s n="s1.1;p5.16">As a result, in the function of blockstack(A,B) and blockunstack(A,B) the aimed object can be put into the ideal position through "tablestate->statematrix[Bx][By+1] = tablestate->statematrix[Ax][Ay];" and a searched space found by the following method: </s>
</p>
<p n="p6.16">
<s n="s1.1;p6.16">
<formula notation="" id="BAWE_6102a-form.002"/> </s>
</p>
<p n="p7.16">
<s n="s1.3;p7.16">Based on the roughly mentioned basic function above and some other in the programming, basic dialogue between user and blocks world is constructed. </s>
<s n="s2.3;p7.16">More details about the programming can be checked in the code list. </s>
<s n="s3.3;p7.16">The state machine is set to allow user to choose two communication modes, one is building blocks world and the other is moving objects in the blocks world depending on the user's command. </s>
</p>
<p n="p8.16">
<s n="s1.2;p8.16">When the input command can not be implemented via one step, which means "stack" and "unstuck" can not be operated directly, the search method should be called to figure out a "path" to access the target. </s>
<s n="s2.2;p8.16">In the approach 2, a novel search method is discussed. </s>
</p>
</div2>
<div2>
<head rend="italic">Approach 2</head>
<p n="p9.16">
<s n="s1.9;p9.16">This search method only concentrates on how to figure out the optimized path from one state to another state. </s>
<s n="s2.9;p9.16">Probably, it can not entirely follow Blocks World specification, but it can be applied in the search part to figure out the best way to get to the desired the state. </s>
<s n="s3.9;p9.16">Three blocks state is taken as example to demonstrate its idea. </s>
<s n="s4.9;p9.16">Totally, there are 13 states for 3 blocks world, they are list in the figure 1 and one state that all the three objects are laid on the ground that is called state zero. </s>
<s n="s5.9;p9.16">From left top to right bottom, they are named as state one to state twelve. </s>
<s n="s6.9;p9.16">Also, if one state can be transferred from another state via only changing one object, the relationship between these two states is set as 1. </s>
<s n="s7.9;p9.16">The relationship between each state are evaluated by this method, therefore put all these results into a matrix as displayed in the figure 2. </s>
<s n="s8.9;p9.16">The paths between each state are showed in this matrix, so the question is transformed into searching shortest way on the graph. </s>
<s n="s9.9;p9.16">The top left corner of the matrix can be taken as the current state, in the mean time the most bottom right corner is the desired states. </s>
</p>
<figure id="BAWE_6102a-fig.001">
<head>Figure 1. Blocks world of three objects</head>
</figure>
<p n="p10.16">
<s n="s1.3;p10.16">How to find out the path between these two corners should be considered by the search algorithm. </s>
<s n="s2.3;p10.16">Therefore, breadth first search is engaged into the algorithm. </s>
<s n="s3.3;p10.16">In the searching procedure, all the traveled states are put into a linked queue for back track. </s>
</p>
<p n="p11.16">
<s n="s1.1;p11.16">
<formula notation="" id="BAWE_6102a-form.003"/> </s>
</p>
<p n="p12.16">
<s n="s1.1;p12.16">The pointer to the rear is set here, and in "void EnQueue(DLinkQueue &amp;Q,PosType e)" the rear point is connected to the node through </s>
</p>
<p n="p13.16">
<s n="s1.1;p13.16">
<formula notation="" id="BAWE_6102a-form.004"/> </s>
</p>
<p n="p14.16">
<s n="s1.3;p14.16">The breadth first search is applied in the loop of "while(!found &amp;&amp; !QueueEmpty(Q))" at "bool ShortestPath(int matrix[][], int m, int n, Stack &amp;S)" function. </s>
<s n="s2.3;p14.16">Then the searched shortest path is pushed into a stack. </s>
<s n="s3.3;p14.16">More details about it can be seen in the code list. </s>
</p>
<p n="p15.16">
<s n="s1.2;p15.16">However, this method can not be embedded into blocks world management algorithm so far, because the approach how to let algorithm dynamically establish the matrix to cope with a variety of blocks states is still being thought about. </s>
<s n="s2.2;p15.16">Moreover, how to make algorithm put selected state and desired state into top left corner and bottom right of the matrix automatically is another important problem. </s>
</p>
<figure id="BAWE_6102a-fig.002">
<head>Figure 2 States matrix</head>
</figure>
</div2>
</div1>
<div1 type="section">
<head rend="bold">Conclusion</head>
<p n="p16.16">
<s n="s1.2;p16.16">In this project, some AI concepts are applied in a practical AI planning topic. </s>
<s n="s2.2;p16.16">Breadth first search method and depth first search method are utilized in this project, though part of them are not very successful so far. </s>
</p>
</div1>
</body>
<back>
<div1 type="back text">
<head rend="bold">Acknowledgement</head>
<p>Brian Tse and Lex are highly appreciated for this project. They give many help and instruction on programming. Dr. Gerard McKee who is the lecturer of CS3W2 transfers much useful AI knowledge and research paper to help us understand AI concept and technology. </p>
</div1>
</back>
</text>
</TEI.2>
