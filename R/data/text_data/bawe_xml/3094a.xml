<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE TEI.2 SYSTEM "tei_bawe.dtd">
<TEI.2 id="_3094a" n="version 1.0">
<teiHeader>
<fileDesc>
<titleStmt>
<title>
</title>
</titleStmt>
<extent/>
<publicationStmt>
<distributor>British Academic Written English (BAWE) corpus</distributor>
<availability>
<p>The British Academic Written English (BAWE) corpus was developed at the Universities of Warwick, Reading and Oxford Brookes, under the directorship of Hilary Nesi and Sheena Gardner (formerly of the Centre for Applied Linguistics [previously called CELTE], Warwick), Paul Thompson (Department of Applied Linguistics, Reading) and Paul Wickens (Westminster Institute of Education, Oxford Brookes), with funding from the ESRC. Subject to the rights of the these institutions in the BAWE corpus, and pursuant to the ESRC agreement, the BAWE corpus is available to researchers for research purposes PROVIDED THAT the following conditions are met:</p>
<p>1. The corpus files are not distributed in either their original form or in modified form.</p>
<p>2. The texts are used for research purposes only; they should not be reproduced in teaching materials.</p>
<p>3. The texts are not reproduced in full for a wider audience/readership, although researchers are free to quote short passages of text (up to 200 running words from any given text).</p>
<p>4. The BAWE corpus developers (contact: BAWE@warwick.ac.uk) are informed of all projects, dissertations, theses, presentations or publications arising from analysis of the corpus.</p>
<p>5. Researchers acknowledge their use of the corpus using the following form of words: "The data in this study come from the British Academic Written English (BAWE) corpus, which was developed at the Universities of Warwick, Reading and Oxford Brookes under the directorship of Hilary Nesi and Sheena Gardner (formerly of the Centre for Applied Linguistics [previously called CELTE], Warwick), Paul Thompson (Department of Applied Linguistics, Reading) and Paul Wickens (Westminster Institute of Education, Oxford Brookes), with funding from the ESRC (RES-000-23-0800)."</p>
</availability>
</publicationStmt>
<notesStmt>
<note/>
</notesStmt>
<sourceDesc>
<p n="level">3</p>
<p n="date">2005-11</p>
<p n="module title">Data Structures</p>
<p n="module code">U08020</p>
<p n="genre family">Design specification</p>
<p n="discipline">Computer Science</p>
<p n="disciplinary group">PS</p>
<p n="grade">D</p>
<p n="number of authors">1</p>
<p n="number of words">820</p>
<p n="number of s-units">76</p>
<p n="number of p">53</p>
<p n="number of tables">57</p>
<p n="number of figures">1</p>
<p n="number of block quotes">0</p>
<p n="number of formulae">19</p>
<p n="number of lists">1</p>
<p n="number of paragraphs formatted like lists">0</p>
<p n="abstract present">no abstract</p>
<p n="average words per s-unit">10.8</p>
<p n="average s-units per p">1.4</p>
<p n="macrotype of assignment">simple assignment</p>
</sourceDesc>
</fileDesc>
<encodingDesc>
<p>TEI P4 (documented in: BAWE.documentation.pdf)</p>
</encodingDesc>
<profileDesc>
<particDesc>
<person>
<p n="gender">m</p>
<p n="year of birth">1979</p>
<p n="first language">Sinhala</p>
<p n="education">OSa</p>
<p n="course">BSc Computing and Information Systems</p>
<p n="student ID">3094</p>
</person>
</particDesc>
</profileDesc>
</teiHeader>
<text>
<front>
<div1 type="toc" n="3">
<head>Contents</head>
<p/>
</div1>
</front>
<body>
<div1 type="section">
<head rend="bold">Introduction</head>
<div2>
<head>Binary Trees</head>
<p n="p1.53">
<s n="s1.4;p1.53">Binary Tree is a data structure which has links to one or two of the same type of data structure, called left and right children, respectively. </s>
<s n="s2.4;p1.53">Children can be referred to as nodes. </s>
<s n="s3.4;p1.53">Binary tree may also have no links to any children. </s>
<s n="s4.4;p1.53">In this document the term node will be used. </s>
</p>
<p n="p2.53">
<s n="s1.3;p2.53">Each node can follow the similar pattern. </s>
<s n="s2.3;p2.53">So each node can form a subtree of it's own. </s>
<s n="s3.3;p2.53">The node which is at the top is called the root node. </s>
</p>
<p n="p3.53">
<s n="s1.2;p3.53">There are several types of binary trees, each with it's own property. </s>
<s n="s2.2;p3.53">The following explains the theory behind the following trees: </s>
</p>
<list type="bulleted">
<item>Binary Search Tree</item>
<item>Max Heap</item>
<item>AVL Tree</item>
</list>
<p n="p4.53">
<s n="s1.1;p4.53">These theories were used as the basis to complete the incomplete modules of KnowItAll.pas. </s>
</p>
</div2>
<div2>
<head>Binary Search Tree</head>
<p n="p5.53">
<s n="s1.2;p5.53">In a binary search tree each node's data value is always less or equal to it's own. </s>
<s n="s2.2;p5.53">And the right node's data value is always greater or equal to it's own data value In the worst case scenario data manipula has the order of O(n). </s>
</p>
</div2>
<div2>
<head>Max Heap</head>
<p n="p6.53">
<s n="s1.2;p6.53">In a max heap each node's data value has the highest or equal value of it's children (left and right nodes). </s>
<s n="s2.2;p6.53">Therefore the root node has the highest (or equal to it's child node's) data value. </s>
</p>
<p n="p7.53">
<s n="s1.3;p7.53">A max heap should also satisfy the complete tree property. </s>
<s n="s2.3;p7.53">That is all nodes and filled from left to right (if the level is not complete). </s>
<s n="s3.3;p7.53">Therefore all levels are full or maximum of one incomplete level is possible. </s>
</p>
</div2>
<div2>
<head>AVL Trees</head>
<p n="p8.53">
<s n="s1.4;p8.53">In an AVL tree the heights of the two subtrees differ by at most one. </s>
<s n="s2.4;p8.53">This should be true with all it's subtrees. </s>
<s n="s3.4;p8.53">If they differ by more than one then it is not considered to be a AVL tree. </s>
<s n="s4.4;p8.53">The advantage of an AVL tree is that data manipulation time in the worse case scenario has the order of O(log n) </s>
</p>
</div2>
</div1>
<div1 type="section">
<head>Design documentation</head>
<div2>
<head>Program feedback features</head>
<p n="p9.53">
<s n="s1.2;p9.53">The program gived the maximum possible feedback. </s>
<s n="s2.2;p9.53">The program the reason whatever the answer is. </s>
</p>
<p n="p10.53">
<s n="s1.1;p10.53">If the user answer is correct it displays why it is correct. </s>
</p>
<p n="p11.53">
<s n="s1.2;p11.53">If the answer is incorrect it display why the answer is incorrect and the reasons why it is incorrect. </s>
<s n="s2.2;p11.53">If the tree has more than one error that makes the answer incorrect it pin point where the error is and what the error is. </s>
</p>
<p n="p12.53">
<s n="s1.1;p12.53">Psedocode on page: </s>
</p>
<table id="BAWE_3094a-tab.001">
<head>Module summary</head>
<row>
<cell/>
</row>
</table>
<p n="p13.53">
<s n="s1.1;p13.53">
<formula notation="" id="BAWE_3094a-form.001"/> </s>
</p>
<p n="p14.53">
<s n="s1.1;p14.53">
<formula notation="" id="BAWE_3094a-form.002"/> </s>
</p>
<p n="p15.53">
<s n="s1.1;p15.53">
<formula notation="" id="BAWE_3094a-form.003"/> </s>
</p>
<p n="p16.53">
<s n="s1.1;p16.53">
<formula notation="" id="BAWE_3094a-form.004"/> </s>
</p>
<p n="p17.53">
<s n="s1.1;p17.53">
<formula notation="" id="BAWE_3094a-form.005"/> </s>
</p>
<p n="p18.53">
<s n="s1.1;p18.53">
<formula notation="" id="BAWE_3094a-form.006"/> </s>
</p>
<p n="p19.53">
<s n="s1.1;p19.53">
<formula notation="" id="BAWE_3094a-form.007"/> </s>
</p>
<p n="p20.53">
<s n="s1.1;p20.53">
<formula notation="" id="BAWE_3094a-form.008"/> </s>
</p>
<p n="p21.53">
<s n="s1.1;p21.53">
<formula notation="" id="BAWE_3094a-form.009"/> </s>
</p>
<figure id="BAWE_3094a-fig.001">
<head>Module Interaction </head>
</figure>
<p n="p22.53">
<s n="s1.1;p22.53">Module Description (Psedocode) </s>
</p>
<p n="p23.53">
<s rend="bold" n="s1.1;p23.53">Module name: IsItABinarySearchTree() </s>
</p>
<p n="p24.53">
<s n="s1.1;p24.53">
<formula notation="" id="BAWE_3094a-form.010"/> </s>
</p>
<p n="p25.53">
<s rend="bold" n="s1.1;p25.53">Module name: IsItAMaxHeap() </s>
</p>
<p n="p26.53">
<s n="s1.1;p26.53">
<formula notation="" id="BAWE_3094a-form.011"/> </s>
</p>
<p n="p27.53">
<s rend="bold" n="s1.1;p27.53">Module name: IsItAnAVLTree() </s>
</p>
<p n="p28.53">
<s n="s1.1;p28.53">
<formula notation="" id="BAWE_3094a-form.012"/> </s>
</p>
<p n="p29.53">
<s rend="bold" n="s1.1;p29.53">Module name: checkifbinarytree() </s>
</p>
<p n="p30.53">
<s n="s1.1;p30.53">
<formula notation="" id="BAWE_3094a-form.013"/> </s>
</p>
<p n="p31.53">
<s rend="bold" n="s1.1;p31.53">Module name: checkifmaxheap() </s>
</p>
<p n="p32.53">
<s n="s1.1;p32.53">
<formula notation="" id="BAWE_3094a-form.014"/> </s>
</p>
<p n="p33.53">
<s rend="bold" n="s1.1;p33.53">Module name: getnodedata() </s>
</p>
<p n="p34.53">
<s n="s1.1;p34.53">
<formula notation="" id="BAWE_3094a-form.015"/> </s>
</p>
<p n="p35.53">
<s rend="bold" n="s1.1;p35.53">Module name: checkifnodenil() </s>
</p>
<p n="p36.53">
<s n="s1.1;p36.53">
<formula notation="" id="BAWE_3094a-form.016"/> </s>
</p>
<p n="p37.53">
<s rend="bold" n="s1.1;p37.53">Module name: checktreeheight() </s>
</p>
<p n="p38.53">
<s n="s1.1;p38.53">
<formula notation="" id="BAWE_3094a-form.017"/> </s>
</p>
<p n="p39.53">
<s rend="bold" n="s1.1;p39.53">Module name: checkifcompletetree() </s>
</p>
<p n="p40.53">
<s n="s1.1;p40.53">
<formula notation="" id="BAWE_3094a-form.018"/> </s>
</p>
<p n="p41.53">
<s rend="bold" n="s1.1;p41.53">Module name: checkifAVLTree() </s>
</p>
<p n="p42.53">
<s n="s1.1;p42.53">
<formula notation="" id="BAWE_3094a-form.019"/> </s>
</p>
</div2>
</div1>
<div1 type="section">
<head>Testing </head>
<div2>
<head>Scope of testing</head>
<p n="p43.53">
<s n="s1.6;p43.53">Onlt the main three modules were tested. </s>
<s n="s2.6;p43.53">Other 'helper' modules in the program and called while running these modules. </s>
<s n="s3.6;p43.53">These modules were extensively tested while programming. </s>
<s n="s4.6;p43.53">The testing of those modules will only be done if actual errors are found. </s>
<s n="s5.6;p43.53">If so they will be debugged but no test documentation will be done. </s>
<s n="s6.6;p43.53">The main modules will be retested again to make sure there are no bug in the program. </s>
</p>
<p n="p44.53">
<s n="s1.2;p44.53">The test will only be forced on the correctness of the program. </s>
<s n="s2.2;p44.53">Other tests, for example stress and performance testing, are not done. </s>
</p>
<p n="p45.53">
<s n="s1.3;p45.53">The tests that involve where any child nodes equal to it's parents were not done. </s>
<s n="s2.3;p45.53">In the test cases the children themselves differ in value from each other. </s>
<s n="s3.3;p45.53">Therefor parens and the two children (if they exist) have distinct values. </s>
</p>
<p n="p46.53">
<s n="s1.3;p46.53">Only a single 2 level subtrees (i.e. parent,left node node and right node) were tested, except where more than two levels were required (such as height testing). </s>
<s n="s2.3;p46.53">The other subtrees, weather they are above, below, to the right or left were ignored. </s>
<s n="s3.3;p46.53">It is assumed that once the program get a single 2 level subtree correct it can get the whole structure correct after checking all the nodes. </s>
</p>
<p n="p47.53">
<s n="s1.3;p47.53">The min and max values of the three nodes (parent,left node and right node) were 98 and -6 respectively. </s>
<s n="s2.3;p47.53">Maximum depth (height) was 6 (levels). </s>
<s n="s3.3;p47.53">These were the original ranges in the program so the trees with only those conditions were tested. </s>
</p>
<p n="p48.53">
<s n="s1.1;p48.53">All the positive combinations of negative and positive values of a subtee was not tested to keep the test cases volume low. </s>
</p>
</div2>
<div2>
<head>Objective of test plan</head>
<p n="p49.53">
<s n="s1.1;p49.53">The objective is to generate combinationssuch that its sufficent enough to test the correctness of the program without a large volume of test data or test cases. </s>
</p>
<table id="BAWE_3094a-tab.002">
<head>Binary tree test plan - 16 tests</head>
<row>
<cell/>
</row>
</table>
<table id="BAWE_3094a-tab.003">
<head>Max heap test plan - 16 + 10 tests Max heap - value testing test plan</head>
<row>
<cell/>
</row>
</table>
<table id="BAWE_3094a-tab.004">
<head>Max heap - complete tree testing test plan</head>
<row>
<cell/>
</row>
</table>
<table id="BAWE_3094a-tab.005">
<head>AVL tree test plan - 10 tests</head>
<row>
<cell/>
</row>
</table>
</div2>
<div2>
<head>Test results</head>
<div3>
<head>Binary Tree test results</head>
<table id="BAWE_3094a-tab.006">
<row>
<cell/>
</row>
</table>
<table id="BAWE_3094a-tab.007">
<row>
<cell/>
</row>
</table>
<table id="BAWE_3094a-tab.008">
<row>
<cell/>
</row>
</table>
<table id="BAWE_3094a-tab.009">
<row>
<cell/>
</row>
</table>
<table id="BAWE_3094a-tab.010">
<row>
<cell/>
</row>
</table>
<table id="BAWE_3094a-tab.011">
<row>
<cell/>
</row>
</table>
<table id="BAWE_3094a-tab.012">
<row>
<cell/>
</row>
</table>
<table id="BAWE_3094a-tab.013">
<row>
<cell/>
</row>
</table>
<table id="BAWE_3094a-tab.014">
<row>
<cell/>
</row>
</table>
<table id="BAWE_3094a-tab.015">
<row>
<cell/>
</row>
</table>
<table id="BAWE_3094a-tab.016">
<row>
<cell/>
</row>
</table>
<table id="BAWE_3094a-tab.017">
<row>
<cell/>
</row>
</table>
<table id="BAWE_3094a-tab.018">
<row>
<cell/>
</row>
</table>
<table id="BAWE_3094a-tab.019">
<row>
<cell/>
</row>
</table>
<table id="BAWE_3094a-tab.020">
<row>
<cell/>
</row>
</table>
<table id="BAWE_3094a-tab.021">
<row>
<cell/>
</row>
</table>
<p n="p50.53"/>
</div3>
<div3>
<head>Max heap - value test results</head>
<table id="BAWE_3094a-tab.022">
<row>
<cell/>
</row>
</table>
<table id="BAWE_3094a-tab.023">
<row>
<cell/>
</row>
</table>
<table id="BAWE_3094a-tab.024">
<row>
<cell/>
</row>
</table>
<table id="BAWE_3094a-tab.025">
<row>
<cell/>
</row>
</table>
<table id="BAWE_3094a-tab.026">
<row>
<cell/>
</row>
</table>
<table id="BAWE_3094a-tab.027">
<row>
<cell/>
</row>
</table>
<table id="BAWE_3094a-tab.028">
<row>
<cell/>
</row>
</table>
<table id="BAWE_3094a-tab.029">
<row>
<cell/>
</row>
</table>
<table id="BAWE_3094a-tab.030">
<row>
<cell/>
</row>
</table>
<table id="BAWE_3094a-tab.031">
<row>
<cell/>
</row>
</table>
<table id="BAWE_3094a-tab.032">
<row>
<cell/>
</row>
</table>
<table id="BAWE_3094a-tab.033">
<row>
<cell/>
</row>
</table>
<table id="BAWE_3094a-tab.034">
<row>
<cell/>
</row>
</table>
<table id="BAWE_3094a-tab.035">
<row>
<cell/>
</row>
</table>
<table id="BAWE_3094a-tab.036">
<row>
<cell/>
</row>
</table>
<table id="BAWE_3094a-tab.037">
<row>
<cell/>
</row>
</table>
<p n="p51.53"/>
</div3>
<div3>
<head>Max heap - complete tree test results *Since the node values are irrelevent to this tests, they were ommited.</head>
<table id="BAWE_3094a-tab.038">
<row>
<cell/>
</row>
</table>
<table id="BAWE_3094a-tab.039">
<row>
<cell/>
</row>
</table>
<table id="BAWE_3094a-tab.040">
<row>
<cell/>
</row>
</table>
<table id="BAWE_3094a-tab.041">
<row>
<cell/>
</row>
</table>
<table id="BAWE_3094a-tab.042">
<row>
<cell/>
</row>
</table>
<table id="BAWE_3094a-tab.043">
<row>
<cell/>
</row>
</table>
<table id="BAWE_3094a-tab.044">
<row>
<cell/>
</row>
</table>
<table id="BAWE_3094a-tab.045">
<row>
<cell/>
</row>
</table>
<table id="BAWE_3094a-tab.046">
<row>
<cell/>
</row>
</table>
<table id="BAWE_3094a-tab.047">
<row>
<cell/>
</row>
</table>
<p n="p52.53"/>
</div3>
<div3>
<head>AVL Tree test results *Since the node values are irrelevent to this tests, they were ommited.</head>
<table id="BAWE_3094a-tab.048">
<row>
<cell/>
</row>
</table>
<table id="BAWE_3094a-tab.049">
<row>
<cell/>
</row>
</table>
<table id="BAWE_3094a-tab.050">
<row>
<cell/>
</row>
</table>
<table id="BAWE_3094a-tab.051">
<row>
<cell/>
</row>
</table>
<table id="BAWE_3094a-tab.052">
<row>
<cell/>
</row>
</table>
<table id="BAWE_3094a-tab.053">
<row>
<cell/>
</row>
</table>
<table id="BAWE_3094a-tab.054">
<row>
<cell/>
</row>
</table>
<table id="BAWE_3094a-tab.055">
<row>
<cell/>
</row>
</table>
<table id="BAWE_3094a-tab.056">
<row>
<cell/>
</row>
</table>
<table id="BAWE_3094a-tab.057">
<row>
<cell/>
</row>
</table>
<p n="p53.53"/>
</div3>
</div2>
</div1>
</body>
<back>
<div1 type="bibliography">
<head rend="bold">References:</head>
<p>Algorithm for calculating the height of the tree</p>
<p>
<seg type="URL" n="http://www.comp.dit.ie/rlawlor/Alg_DS/searching/3.%20%20Binary%20Search%20Tree%20-%20Height.pdf"/>
</p>
<p>Algorithm for checking a complete tree</p>
<p>
<seg type="URL" n="http://www.faqs.org/docs/thinkjava/chap18.htm"/>
</p>
</div1>
</back>
</text>
</TEI.2>
