<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE TEI.2 SYSTEM "tei_bawe.dtd">
<TEI.2 id="_0058e" n="version 1.0">
<teiHeader>
<fileDesc>
<titleStmt>
<title>Travelling Salesman Problem</title>
</titleStmt>
<extent/>
<publicationStmt>
<distributor>British Academic Written English (BAWE) corpus</distributor>
<availability>
<p>The British Academic Written English (BAWE) corpus was developed at the Universities of Warwick, Reading and Oxford Brookes, under the directorship of Hilary Nesi and Sheena Gardner (formerly of the Centre for Applied Linguistics [previously called CELTE], Warwick), Paul Thompson (Department of Applied Linguistics, Reading) and Paul Wickens (Westminster Institute of Education, Oxford Brookes), with funding from the ESRC. Subject to the rights of the these institutions in the BAWE corpus, and pursuant to the ESRC agreement, the BAWE corpus is available to researchers for research purposes PROVIDED THAT the following conditions are met:</p>
<p>1. The corpus files are not distributed in either their original form or in modified form.</p>
<p>2. The texts are used for research purposes only; they should not be reproduced in teaching materials.</p>
<p>3. The texts are not reproduced in full for a wider audience/readership, although researchers are free to quote short passages of text (up to 200 running words from any given text).</p>
<p>4. The BAWE corpus developers (contact: BAWE@warwick.ac.uk) are informed of all projects, dissertations, theses, presentations or publications arising from analysis of the corpus.</p>
<p>5. Researchers acknowledge their use of the corpus using the following form of words: "The data in this study come from the British Academic Written English (BAWE) corpus, which was developed at the Universities of Warwick, Reading and Oxford Brookes under the directorship of Hilary Nesi and Sheena Gardner (formerly of the Centre for Applied Linguistics [previously called CELTE], Warwick), Paul Thompson (Department of Applied Linguistics, Reading) and Paul Wickens (Westminster Institute of Education, Oxford Brookes), with funding from the ESRC (RES-000-23-0800)."</p>
</availability>
</publicationStmt>
<notesStmt>
<note resp="British Academic Written English (BAWE) corpus project">The document has a title page which contains:document titletitle part</note>
</notesStmt>
<sourceDesc>
<p n="level">2</p>
<p n="date">2004-12</p>
<p n="module title">Mathematical Programming II</p>
<p n="module code">IB2070</p>
<p n="genre family">Exercise</p>
<p n="discipline">Business</p>
<p n="disciplinary group">SS</p>
<p n="grade">M</p>
<p n="number of authors">1</p>
<p n="number of words">1836</p>
<p n="number of s-units">104</p>
<p n="number of p">39</p>
<p n="number of tables">1</p>
<p n="number of figures">1</p>
<p n="number of block quotes">0</p>
<p n="number of formulae">5</p>
<p n="number of lists">0</p>
<p n="number of paragraphs formatted like lists">10</p>
<p n="abstract present">no abstract</p>
<p n="average words per s-unit">17.7</p>
<p n="average s-units per p">2.7</p>
<p n="macrotype of assignment">simple assignment</p>
</sourceDesc>
</fileDesc>
<encodingDesc>
<p>TEI P4 (documented in: BAWE.documentation.pdf)</p>
</encodingDesc>
<profileDesc>
<particDesc>
<person>
<p n="gender">f</p>
<p n="year of birth">1984</p>
<p n="first language">English</p>
<p n="education">UKA</p>
<p n="course">Mathematics, Operational Research, Statistics and Economics</p>
<p n="student ID">0058</p>
</person>
</particDesc>
</profileDesc>
</teiHeader>
<text>
<front>
<titlePage>
<docTitle>
<titlePart rend="bold">Travelling Salesman Problem</titlePart>
</docTitle>
<titlePart rend="bold">
<name type="student ID"/>
</titlePart>
<docTitle>
<titlePart rend="bold">Travelling Salesman Problem</titlePart>
</docTitle>
</titlePage>
</front>
<body>
<div1 type="section">
<head rend="bold italic">Own Algorithm </head>
<p n="p1.39">
<s n="s1.5;p1.39">A simple strategy to solve the travelling salesman problem would be one which would undoubtedly be undertaken in practice by many 'travelling salesman'. </s>
<s n="s2.5;p1.39">It is a less mathematically based algorithm than those to be discussed later. </s>
<s n="s3.5;p1.39">In summary the strategy simply starts at location 1.Here the travelling salesman chooses the closest location to travel to. </s>
<s n="s4.5;p1.39">At the next location the salesman does the same again ensuring that he never returns to a location he has already visited and that he does not return to 1 before visiting every other location. </s>
<s n="s5.5;p1.39">At the final location he simply returns to location 1. </s>
</p>
<p n="p2.39">
<s n="s1.1;p2.39">The best way to illustrate the strategy is in application to the given distance matrix: </s>
</p>
<table id="BAWE_0058e-tab.001">
<row>
<cell/>
</row>
</table>
<p rend="bulleted" n="p3.39">
<s n="s1.5;p3.39">
<hi rend="bold">Step 1</hi> Consider the distance matrix. </s>
<s n="s2.5;p3.39">Look at the row relating to the starting location (location 1). </s>
<s n="s3.5;p3.39">The location closest to location 1 is location 6 at 93 units. </s>
<s n="s4.5;p3.39">Hence start by travelling from location 1 to location 6. </s>
<s n="s5.5;p3.39">Row 1 and column six must now be eliminated as you cannot travel from location 1 again and cannot return to location 6. </s>
</p>
<p rend="bulleted" n="p4.39">
<s n="s1.5;p4.39">
<hi rend="bold">Step 2</hi> The Travelling Salesman is now at location 6. </s>
<s n="s2.5;p4.39">Hence we must consider row 6. </s>
<s n="s3.5;p4.39">The closest location is location 3. </s>
<s n="s4.5;p4.39">Hence the salesman travels from location 6 to location 3. </s>
<s n="s5.5;p4.39">Row 6 and column 3 are now eliminated. </s>
</p>
<p rend="bulleted" n="p5.39">
<s n="s1.6;p5.39">
<hi rend="bold">Step 3</hi> The Travelling Salesman is now at location 3. </s>
<s n="s2.6;p5.39">Hence we must consider row 3. </s>
<s n="s3.6;p5.39">The closest location is location 6, however the salesman has already visited location 6 and this column is therefore eliminated. </s>
<s n="s4.6;p5.39">The second closest location is location1, however the salesman cannot return to location 1 without visiting all the other locations. </s>
<s n="s5.6;p5.39">Hence the salesman travels from location 3 to location 4 as this is the 3 <hi rend="sup">rd</hi> closest location. </s>
<s n="s6.6;p5.39">Row 3 and column 4 are now eliminated. </s>
</p>
<p rend="bulleted" n="p6.39">
<s n="s1.4;p6.39">
<hi rend="bold">Step 4</hi> The Travelling Salesman is now at location 4. </s>
<s n="s2.4;p6.39">The only possible locations left to visit are 5 and 2 as every other location has been eliminated. </s>
<s n="s3.4;p6.39">The closest location is location 2. </s>
<s n="s4.4;p6.39">Hence row 4 and column 2 are eliminated. </s>
</p>
<p rend="bulleted" n="p7.39">
<s n="s1.1;p7.39">
<hi rend="bold">Step 5</hi> From row 2 the only possible option for the Salesman is to travel to location 5 (note this would have been the shortest distance from row 2 anyway). </s>
</p>
<p rend="bulleted" n="p8.39">
<s n="s1.2;p8.39">
<hi rend="bold">Step 6</hi> Once the Travelling Salesman is at location 5 he has visited every location. </s>
<s n="s2.2;p8.39">Hence he returns to location1. </s>
</p>
<p n="p9.39">
<s n="s1.1;p9.39">The path travelled by the salesman using this method to minimise distance is: </s>
</p>
<p n="p10.39">
<s n="s1.2;p10.39">1-6-3-4-2-5-1. </s>
<s n="s2.2;p10.39">The total distance travelled is 93 + 30 + 198 + 209 + 108 + 219 = 857 units. </s>
</p>
</div1>
<div1 type="section">
<head rend="bold italic">Branch-and-bound method</head>
<p n="p11.39">
<s n="s1.1;p11.39">See Appendix 1 for branch-and-bound calculations. </s>
</p>
<p n="p12.39">
<s n="s1.1;p12.39">Note: </s>
</p>
<p rend="ordered" n="p13.39">
<s n="s1.3;p13.39">c <hi rend="sub">ij</hi> is the distance from travelling from location i to location j. </s>
<s n="s2.3;p13.39">For example, in this instance c <hi rend="sub">12</hi> is 113 units. </s>
<s n="s3.3;p13.39">Let c <hi rend="sub">ii</hi> = M where M is a very large number (this ensures that the solution does not detail the salesman to go to city i as soon as he leaves city i) </s>
</p>
<p rend="ordered" n="p14.39">
<s n="s1.1;p14.39">x <hi rend="sub">ij</hi> = 1 if the salesman travels from location i to location j, 0 otherwise. </s>
</p>
<p n="p15.39">
<s n="s1.2;p15.39">This formulation is discussed in question 3. </s>
<s n="s2.2;p15.39">However, the notation is used here. </s>
</p>
<div2>
<head rend="bold">Branch and Bound Tree: </head>
<p n="p16.39">
<s n="s1.1;p16.39">We take the first Global Upper Bound as 857 units from my own algorithm solution of the previous question. </s>
</p>
<figure id="BAWE_0058e-pic.001"/>
<p n="p17.39">
<s n="s1.3;p17.39">We cannot branch any further at sub-problems 5 and 7 as both the distances travelled are greater than the new global upper bound of 813. </s>
<s n="s2.3;p17.39">No further branching will yield an optimal solution. </s>
<s n="s3.3;p17.39">At sub-problems 4 and 6 there are no sub-tours hence no further branching nor use of algorithm from question 1 is required. </s>
</p>
<p n="p18.39">
<s n="s1.4;p18.39">The minimal distance for the Salesman to travel is 813 units. </s>
<s n="s2.4;p18.39">He can do this in 2 possible ways. </s>
<s n="s3.4;p18.39">The 2 possible paths that yield this solution are 1-6-3-4-5-2-1 and 1-2-5-4-3-6-1. </s>
<s n="s4.4;p18.39">These are the reverse of each other. </s>
</p>
</div2>
<div2>
<head rend="bold">Comment on Solution:</head>
<p n="p19.39">
<s n="s1.4;p19.39">The branch and bound approach I have researched and used here (Winston, W.L., <hi rend="italic">Operational Research, Applications and Algorithms</hi>) is an approach to finding a solution to a combinatorial optimisation problem. </s>
<s n="s2.4;p19.39">This means that there are many possible feasible solutions so it takes a great deal of time to find all possible solutions explicitly. </s>
<s n="s3.4;p19.39">The branch and bound approach takes advantage of the particular problem being considered to find the optimal solution implicitly. </s>
<s n="s4.4;p19.39">In this instance the elimination of certain journeys or arcs to eliminate sub-tours means that a solution can be found. </s>
</p>
<p n="p20.39">
<s n="s1.3;p20.39">The approach I have researched and used here differs to that used in lectures in that at every sub-problem the Hungarian Method is used to find the actual path that relates to the specific solution and the distance related to it rather than finding only a distance value. </s>
<s n="s2.3;p20.39">This means that at every sub-problem it is possible to branch to eliminate sub-tours as it is known what the sub-tours are and therefore we can quickly discover the optimal solution. </s>
<s n="s3.3;p20.39">The approach used in lectures eliminates only random arcs meaning that the solution found may only be approximate rather than optimal and that much branching must go on before the actual optimal solution is found. </s>
</p>
<p n="p21.39">
<s n="s1.5;p21.39">In this instance the solution is optimal as the Hungarian Method allows well chosen removal of specific arcs that yield sub-tours so narrowing down the optimal solution quickly. </s>
<s n="s2.5;p21.39">In addition, it is an intuitively correct solution. </s>
<s n="s3.5;p21.39">It can be seen that it makes sense to travel in one direction between locations close to each other such as location 3 and 6 or locations 2 and 5. </s>
<s n="s4.5;p21.39">Hence considering arcs with or without one direction or another will intuitively lead to an optimal solution. </s>
<s n="s5.5;p21.39">This intuitive approach is easy to see for a small number of locations; however, for a larger number of locations this is more difficult. </s>
</p>
</div2>
</div1>
<div1 type="section">
<head rend="bold italic">Integer Linear Programming</head>
<p n="p22.39">
<s n="s1.1;p22.39">Before setting up a spreadsheet model to solve the Travelling Salesman Problem as an integer linear programming problem the problem must be formulated. </s>
</p>
<p n="p23.39">
<s n="s1.2;p23.39">For i ≠ j let c <hi rend="sub">ij</hi> = distance from city i to city j and let c <hi rend="sub">ii</hi> = M where M is a very large number (this ensures that the solution does not detail the salesman to go to city i as soon as he leaves city i). </s>
<s n="s2.2;p23.39">Within the spreadsheet model M is set equal to 10,000. </s>
</p>
<p n="p24.39">
<s n="s1.1;p24.39">Define x <hi rend="sub">ij</hi> = 1 if the salesman travels from location i to location j, 0 otherwise. </s>
</p>
<p n="p25.39">
<s n="s1.1;p25.39">Then the solution to the Travelling Salesman Problem can be found by solving: </s>
</p>
<p n="p26.39">
<s n="s1.1;p26.39">
<formula notation="" id="BAWE_0058e-form.001"/> </s>
</p>
<p n="p27.39">
<s n="s1.1;p27.39">
<formula notation="" id="BAWE_0058e-form.002"/> </s>
</p>
<p n="p28.39">
<s n="s1.1;p28.39">
<formula notation="" id="BAWE_0058e-form.003"/> </s>
</p>
<p n="p29.39">
<s n="s1.1;p29.39">
<formula notation="" id="BAWE_0058e-form.004"/> </s>
</p>
<p n="p30.39">
<s n="s1.1;p30.39">
<formula notation="" id="BAWE_0058e-form.005"/> </s>
</p>
<p n="p31.39">
<s n="s1.4;p31.39">Formulation within a spreadsheet model can be seen on the following page. </s>
<s n="s2.4;p31.39">Solver finds an optimal solution of 813 by the salesman travelling 1-6-3-4-5-2-1. </s>
<s n="s3.4;p31.39">This is the same as the solution obtained from the branch and bound method. </s>
<s n="s4.4;p31.39">Appendix 2 shows a simple example of the model showing that it is correct. </s>
</p>
</div1>
<div1 type="section">
<head rend="bold italic">Comparison of Methods. </head>
<p n="p32.39">
<s n="s1.3;p32.39">It is evident that none of the three approaches considered provide an efficient method to solving the Travelling Salesman Problem. </s>
<s n="s2.3;p32.39">The problem first occurred in 1759 from Euler who wanted to move a knight to every position on the chess board exactly once, however the problem first gained fame in a book written by Voigt in 1832. </s>
<s n="s3.3;p32.39">There has been much investigation in Mathematics into how to solve the problem efficiently as well as optimally. </s>
</p>
<p n="p33.39">
<s n="s1.4;p33.39">My original algorithm provides a quick and intuitively simple method to solving the problem. </s>
<s n="s2.4;p33.39">However, one of the obvious disadvantages is that it does not yield the optimal solution in every case. </s>
<s n="s3.4;p33.39">This is the obvious advantage of the branch and bound as well as the integer linear programming solution using solver. </s>
<s n="s4.4;p33.39">For this specific example these two methods yield the optimal solution. </s>
</p>
<p n="p34.39">
<s n="s1.5;p34.39">As discussed previously the branch and bound method used within this assignment differs to that used within the lecture examples as through the Hungarian Method it provides strategic elimination of sub-tours to find the optimal solution efficiently rather than random elimination of certain arcs. </s>
<s n="s2.5;p34.39">I believe that this method allows greater understanding of the specific problem in hand as it allows the user to consider the consequences of each action taken. </s>
<s n="s3.5;p34.39">However, the method is still time consuming and for more than 6 cities it would become tedious. </s>
<s n="s4.5;p34.39">The state space would become almost unmanageable and without the explicit set up of a computer based model there is also a certain amount of room for human error. </s>
<s n="s5.5;p34.39">A mistake in one sub-problem will also lead through to those further down which is certainly not ideal as the final solution would be incorrect. </s>
</p>
<p n="p35.39">
<s n="s1.4;p35.39">An alternative to either of these solutions would of course be the Integer Linear Programming spreadsheet method using Solver. </s>
<s n="s2.4;p35.39">This is a quick and easy method to use once the spreadsheet model is set up as can be seen from the adaptation in the appendices for a different distance matrix. </s>
<s n="s3.4;p35.39">However Solver is not always guaranteed to be able to find an optimal solution in the time limits set by network users which shows that this method is certainly not ideal. </s>
<s n="s4.4;p35.39">For a larger n amount of cities it would also be more time consuming with perhaps less likely chance of a solution. </s>
</p>
<p n="p36.39">
<s n="s1.4;p36.39">Perhaps then the only full proof method to optimally solving the Travelling Salesman Problem is by enumerating each possible tour and searching for the tour with smallest cost/ distance. </s>
<s n="s2.4;p36.39">For n cities the number of tours is n!. </s>
<s n="s3.4;p36.39">However, when n becomes large it is impossible to find the cost/ distance of every tour in polynomial time. </s>
<s n="s4.4;p36.39">For smaller n, however, perhaps through use of a computer program this would be the best method. </s>
</p>
<p n="p37.39">
<s n="s1.8;p37.39">In solving a real life large scale Travelling Salesman Problem investigation into different methods is needed. </s>
<s n="s2.8;p37.39">For instance heuristic approaches could be looked at. </s>
<s n="s3.8;p37.39">These do not try to encompass every possibility of the problem but try to apply common sense to shrink the problem to a manageable size. </s>
<s n="s4.8;p37.39">The word 'heuristic' means "A rule of thumb, simplification or educated guess that reduces or limits the search for solutions in domains that are difficult and poorly understood. </s>
<s n="s5.8;p37.39">Heuristics do not guarantee optimal, or even feasible, solutions and are often used with no theoretical guarantee." </s>
<s n="s6.8;p37.39">An example of a heuristic method would be perhaps be my own algorithm. </s>
<s n="s7.8;p37.39">Another example would perhaps be empirical analysis which involves comparing heuristics such as my own algorithm to a number of problems where the optimal tour is already known. </s>
<s n="s8.8;p37.39">The application of such methods can be done in polynomial time, which is perhaps not possible for other methods and even though the complete optimal solution may not be found, a close approximation is better than no solution at all. Of course, it is important to compare heuristics with regard to computer running time for the other algorithms and ease of implementation. </s>
</p>
</div1>
<div1 type="section">
<head rend="bold italic">Suggestions for further work:</head>
<p rend="bulleted" n="p38.39">
<s n="s1.1;p38.39">Investigation into a travelling salesman problem where we have more than one salesman. </s>
</p>
<p rend="bulleted" n="p39.39">
<s n="s1.1;p39.39">A travelling salesman problem where we have costs instead of distances of travelling from city i to city j and the cost from city j to city i is different to that of city i to city j. </s>
</p>
</div1>
</body>
<back>
<div1 type="appendix">
<head rend="bold">Appendices</head>
<p/>
</div1>
</back>
</text>
</TEI.2>
