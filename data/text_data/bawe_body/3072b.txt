Program to calculate the cost of an order off from an array of records of 3 items.
Declare records and array.
Declare procedure to ask for details of record.
Ask user if they want to place an order.
If they want to, ask which product.
Search for product in database.
If found, display details of products.
Ask if they want to place an order for that product.
If yes, Ask how many they want to order.
Calculate cost, Decrease stock.
Ask if they want to add another product.
Add until they say that they do not want to add another product, incrementing cost, and decreasing stock also.
Output Cost of Order.
Ask if they want to place another order 1. Declare records and array 2. Procedure which gets all details about the products and store it in array 2.1 Ask for the details for 3 products 3. Procedure to determine if the user wants to place an order and to validate the answer 3.1 Ask if user wants to place an order 4. Procedure to ask which product the user wants to supposedly order 4.1 Get product name from user 5. Procedure to search the array for product name entered by user 5.1 Compare product in array with product name input by user 5.1.1When they match, call procedure to display details of that product call procedure to process order about that product else 5.1.2 loop procedure to search array again 5.2 Procedure used to do part of statement when product is not in array 5.2.1 display error message - record not found 5.2.2 ask for product name again 5.2.3 call procedure to search the array again 6. Procedure to display details of products 6.1 Display Product details 7. Procedure to get order amount for product displayed, calculate the cost of the order, and adjust stock level 7.1 Ask user if they want to order the product 7.2 If answer = 'N' 7.3 Make loop exit 7.4 Else 7.5 Call procedure to obtain number of products that user wants to order 7.6 Process Order - Calculate cost, new stock number(procedure 9) 8. Procedure to ask user how many of the product displayed they want to order and validate the 8.1 Ask user how many he wants to order 9.Procedure to determine whether user wants to add another product to the order 9.1 call procedure to ask for product user wants to order 9.2 call procedure to search for item in array 9.3 call procedure to check if item has been found in the array 9.4 Call Procedure to ask whether to order again.
Procedure which coordinate the other procedure when the user wants to order 10. Call procedure to ask whether user wants to order something or not 10.1 ask if the user wants to add another product to the order 11. call procedure that deals with adding product to order 12. output cost of order 13. loop and ask if user wants to place another order.
Introduce program.
Call procedure to take product details from the user.
Process the order if user wants to order 1. Declare records and array 2. Procedure which gets all details about the products and store it in array - EnterProdDetails 2.1 ask for the details for 3 products 2.1.1 store Product Name in array 2.1.2 Call procedure to get Product ID - InputProdID 2.1.3 Check range of Product ID 2.1.4 Call procedure to get Cost of Product - InputProdCost 2.1.5 Check Range of Cost of Product 2.1.6 Call procedure to get Stock Level - InputProdStkLevel 2.1.7 Check Range of Stock Level 3. Procedure to determine if the user wants to place an order and to validate the answer Question_Whether_to_place_order_or_not 3.1 Ask if user wants to place an order 3.1.1 Store Answer (y/n) 3.1.2 Validate user answer 4. Procedure to ask which product the user wants to supposedly order - Ask_ProdName 4.1 get product name from user 5. Procedure to search the array for product name entered by user - SearchArray 5.0 While Counter  = 3 5.1 Compare product in array with product name input by user 5.1.3 if they match, call procedure to display details of that product - DisplayProdDetails call procedure to process order about that product - ProcessOrderForDisplayedProd else 5.1.4 increment counter so as to search next item in array 5.1.5 loop procedure to search array again 5.2 Procedure used to do part of statement when product is not in array - ProdNotInArray 5.2.1 display error message - record not found 5.2.2 ask for product name again 5.2.3 call procedure to search the array again - SearchArray 6. Procedure to display details of products - DisplayProdDetails 6.1 Display Product details 7 Procedure to get order amount for product displayed, calculate the cost of the order, and adjust stock level - ProcessOrderForDisplayedProd 7.1 Ask user if they want to order the product 7.1.1 Store Answer (y/n) 7.2 If answer = 'N' 7.3 Make loop exit 7.4 Else 7.5 Call procedure to obtain number of products that user wants to order - Ask_number_of_products_to_be_ordered 7.6 Calculate cost, and new stock 7.6.1 Increase amount in stock 7.6.2 calculate, increment cost of order 8Procedure to ask user how many of the porduct displayed they want to order and validate the answer - 8.1 Ask_number_of_products_to_be_ordered 8.1.1 Ask user how many he wants to order - NumOrdered 8.1.2 Validate answer of user 9. Procedure to determine whether user wants to add another product to the order - User_wants_to_add_more_products_to_order 9.0 loop when the answer in the procedure Process order = y 9.1 call procedure to ask for product user wants to order - Ask_ProdName 9.2 call procedure to search for item in array - SearchArray 9.3 call procedure to check if item has been found in the array - ProdNotInArray 9.4 Call Procedure to ask whether to order again - Question_Whether_to_place_order_or_not 10.Procedure which coordinate the other procedure when the user wants to order - ProcessOrder; 10.1 declare local variables 10.2 Call procedure to ask whether user wants to order something or not - Qestion_Whether_to_place_order_or_not 10.2.1ask if the user wants to add another product to the order 10.2.2 call procedure that deals with adding product to order - User_Wants_to_Add_More_products_to_order 10.2.3 output cost of order 10.2.4 loop and ask if user wants to place another order - Question_Whether_to_place_order_or_not.
Introduce program call procedure to take product details from the user - EnterProdDetails;.
Process the order if user wants to order (loops on true) - ProcessOrder; 1. Declare records and array 2.2.4.1 Procedure to input the ID of the product - InputProdID 2.2.4.2Get Product Id from user 2.2.8.1 Procedure to input Cost of product - InputProdCost 2.2.8.2 get cost of product from user 2.2.1.12.1 Procedure to get quantity in stock from the user - InputProdStkLevel 2.1.12.2 get quantity in stock from user 2. Procedure which gets all details about the products and store it in array - EnterProdDetails 2.1 ask for the details for 3 products 2.2 store Product Name in array 2.2.1 Call procedure to get Product ID - InputProdID 2.2.2If Product ID is not in range 2.2.3Display error message 2.2.4 Loop to ask for ID again - call InputProdID 2.2.5Call procedure to get Cost of Product - InputProdCost 2.2.6If Product Cost is not in range - ProdCost   0 2.2.7Display error message 2.2.8Loop to Ask for Product Cost again - call InputProdCost 2.2.9Call procedure to get Stock Level - InputProdStkLevel 2.2.10 If StockLevel is not in range - ProdStkLEvel   0 2.2.11 display error message 2.2.12 Loop to ask for stock level again - Call InputProdStkLevel 3. Procedure to determine if the user wants to place an order and to validate the answer - Question_Whether_to_place_order_or_not 3.1 Ask if user wants to place an order 3.1.1 Store Answer (y/n) 3.1.2. validate user answer 3.1.2.1 If not valid, (not Y/N or y/n) 3.1.2.2 Display error message 3.1.2.3 loop statement to ask for answer again - call Question_Whether_to_place_order_or_not 4. Procedure to ask which product the user wants to supposedly order - Ask_ProdName 4.1 get product name from user 5. Procedure to search the array for product name entered by user - SearchArray 5.0 Initialise local variables 5.0.1 While Counter  = 3 5.1 Compare product in array with product name input by user 5.1.1 if they match, 5.1.2call procedure to display details of that product 5.1.3 call procedure to process order about that product - ProcessOrderForDisplayedProd 5.1.4 else 5.1.5 increment counter so as to search next item in array 5.1.6 loop procedure to search array again 5.2 Procedure used to do part of statement when product is not in array - ProdNotInArray.
Note: ocounter = 4 means that we are already out of the array (array of 3) 5.2.0 Set resultname:= 'n' ; 5.2.0.1 If OCounter = 4 then 5.2.1 display error message - record not found 5.2.1.1 reset counter 5.2.2 ask for product name again 5.2.3 call procedure to search the array again - SearchArray 6. Procedure to display details of products - DisplayProdDetails 6.1 Diplay 'Product details are:' 6.1.1 Display 'product id:' 6.1.2 Display 'product cost:' 6.1.3 Display 'amount in stock' 7. Procedure to get order amount for product displayed, calculate the cost of the order, and adjust stock level.
ProcessOrderForDisplayedProd 7.0 initialise local variables 7.1 Ask user if they want to order the product 7.1.0Ask user if they want to order product 7.1.1 Store Answer (y/n) 7.2 If answer = 'N' 7.3 Set counter to 5 so that the loop exits 7.4 Else 7.5 Call procedure to obtain number of products that user wants to order - Ask_number_of_products_to_be_ordered 7.6.1 decrease amount in stock 7.6.2 calculate, increment cost of order 7.6.3 set counter to 5 so that loop exits 7.6.4 set answer to 'n' so that loop exits 8. Procedure to ask user how many of the product displayed they want to order and validate the answer -.
Ask_number_of_products_to_be_ordered 8.1.1 Ask user how many he wants to order - NumOrdered 8.1.2 Validate answer of user 8.1.2.1. If NumOrdered   Stklevel for that product or if NumOrdered   0 8.1.2.2 Display error message 8.1.2.3 Loop procedure again - Ask_number_of_products_to_be_ordered 9. Procedure to determine whether user wants to add another product to the order - User_wants_to_add_more_products_to_order 9.0 loop when the answer in the procedure Process order = y 9.1 call procedure to ask for product user wants to order - Ask_ProdName 9.2 call procedure to search for item in array - SearchArray 9.3 call procedure to check if item has been found in the array - ProdNotInArray 9.3.1 If Resultname = 'n' then 9.3.2 ProdAnswer := 'n'; 9.4 Call Procedure to ask whether to order again - Question_Whether_to_place_order_or_not 10. Procedure which coordinate the other procedure when the user wants to order - ProcessOrder; 10.1 declare local variables 10.2 Call procedure to ask whether user wants to order something or not - Question_Whether_to_place_order_or_not 10.2.0 Loop only if answer to question in above procedure is true 10.2.1 ask if the user wants to add another product to the order 10.2.1.1 Reset Counter 10.2.2 call procedure that deals with adding product to order - User_Wants_to_Add_More_products_to_order 10.2.3 output cost of order 10.2.4 loop and ask if user wants to place another order - Question_Whether_to_place_order_or_not.
Introduce program call procedure to take product details from the user - EnterProdDetails;.
Process the order if user wants to order (loops on true) - ProcessOrder;.
Notes:
As can be seen only 2 main procedures are used, this is because, the primary aim of the program is for the program is to capture input to put in the array and then know if the user wants to order something only happens if the user wants to order, so the program can then loop on true and just end when they do not want to order anymore end.
Set 1: 1001, 50, 12, 99, 10099, 175, 9, 1023, 100, 34, y, n , y , y mini-widgit, 14, 7 , y, average widgit, 0 , y, mini-widgit, 2, n.
Unable to make the program accept only Y or N. Weirdly the logic was not good or I did not know the right syntax.
Parameter passing had to be done really carefully. But at the end, got the hang of it.
Tell the user when the item is out of stock.
