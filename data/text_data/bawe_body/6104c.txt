This project is focussed on the construction of a small mobile robot which will use ultrasonic sensors in order to navigate around a test environment. The robot will be designed using through hole and surface mount soldering, which will allow all of the components to be added to the board. The construction of the chassis will be made from aluminium. This will support the motors and the circuit board.
The robot will be programmed using MPLAB and Visual Studio.NET 2003 C Compiler. The hex file of code that will be created will be sent via a serial cable to a PIC16F87 on the circuit board. The PIC will send pulses to the motors to control their speeds. This method of data transmission is known as Pulse Width Modulation or PWM.
Once complete the robot will be able to navigate its way around both stationary and moving obstacles. The robot could then be modified in some ways to make it more efficient.
The two power connectors J1 and J2 are connected to the battery via the power switch. The power connectors are arranged in parallel rather than series so that the same amount of power is dissipated through the circuit board and also the motors. If the power connectors were arranged in series then the majority of power would have been used in operating the motors and not enough would remain to power the rest of the board.
The capacitors C2 and C13 are used to smooth out the D.C voltage that is being fed into the circuit from the pp3 battery. By smoothing out the voltage, chips on the circuit board will be able to deduce between high and low states from the amount of voltage that flows through as opposed to a constant flow of high and low variations from not filtering the input voltage.
Capacitors C9 and C10 are used in connection with the power supply smoothing capacitor to further filter out any frequencies that could cause any obscurities in determining whether a input on the PIC16F87 's input pin is either high or low. By adding more filtering, there are less possibilities of errors.
A PWM signal is an abbreviation for Pulse Width Modulation. The PWM signal is created by switching the D.C voltage on a off at rapid intervals. This is converted to a square wave formation which alternates between fully on and off. The duration of the pulse where the D.C voltage is fully on is called the duty cycle.
Since the pulses occur at relatively high frequencies, depending on what percentage of the pulse(s) are high, can be used to determine the speed of a motor. For instance, if the duty cycle was 75% then the motor connected to the circuit would run at    of its maximum speed.
To select a suitable PWM frequency for the robots motors, it is first necessary to deduce what the maximum frequency they can operate at before they are damaged. With most motors like the ones used in the robot this is about 20kHz.
The next factor to consider is the noise motors produce. Ideally, the motors would operate beyond the range of human hearing so that no 'buzzing' is heard. The assumption can therefore be made that the motors should operate at above 15kHz (This frequency is approximately the highest frequency that humans can hear) By taking an average, anywhere within the range of 16-18kHz would be an appropriate frequency for the robot.
Theories postulate around ideal situations. In an ideal situation, there would be no friction or air resistance to act as an opposing force to the robot. If this was the case then the rotation speed would be proportional to the voltage across the motor. Due to friction, there will always be some error in this assumption.
Therefore:
This is the current through the resistor which is the same as the current through the L.E.D. So the current through the L.E.D is also 0.0138A.
The construction of the robot consisted of three main stages. Surface mount soldering on the circuit board, (which is now a legal requirement due to intoxicating compounds inside solder) through hole soldering for the connector pins, test pins and sensors; last of all the construction of the chassis which would house the board.
The construction took about twelve hours overall, and on the whole was relatively straight forward. There were a few minor problems that were encountered during the board construction. The first problem was solved by using a hot soldering iron and a large magnifying glass to detach a bridge that had formed on one of the IC 's on the board.
There was only one other fault with the board which was discovered. This was due to soldering a broken ultrasonic sensor onto the raised pins that were an improvisation of the original design. This problem was not discovered until the test program was loaded onto the robot.
The construction of the chassis was relatively simple and there were no problems in its manufacture. Instead of using a rear wheel, a base plate was mounted at the rear of the robot and attached to this was a castor ball assembly. This was chosen to allow for smoother running on the test surface.
After manufacturing the robot from the schematics and components given, a bootloader was put onto the PIC and when the robot was switched on, it should flash its red L.E.D. This was the case, so a test program was put on it in order to check the functionality of the motors. The program was successful however during this process; the ultrasonic sensors were tested by reading the values that were outputted to the console window.
The results showed a value of zero for one of the sonars at a wide range of distances, therefore it was concluded that the sonar was damaged.
After replacing the sonar, the test program was a complete success, allowing the robot to be programmed.
Now that the robot was running the test program successfully from the command prompt, the next task was to program the robot using the C language, then converting the user file into a hex file so that it could be sent via a serial cable to the PIC16F87 on the robot.
The code that was designed set parameters for different distances for each of the sonar sensors after determining their range. The distances allowed the robot to move around its environment at different speeds according to how close or how far away an obstacle was.
After altering the parameters from medium and far to distance, the robot functioned efficiently. The only problem with the code used was that the robot turned away from obstacles at a greater distance than intended. This is a feature that will be modified in due time to improve the robots efficiency as an autonomous vehicle.
Now that the robot was adhering to a program that was stored on its PIC, slight modifications were made to its design in order to make it more efficient.
First, the serial connector that was originally detachable was now secured in place by M3 nuts and bolts. In connection with this, a serial cable was made from some cable and twisted together using a vice and a drill chuck, before soldering the connectors on the end. The cable allowed for a better connection between COM1 and the robot.
The other modification that was made was to use a castor ball assembly instead of a normal wheel that was given, to improve the overall manoeuvrability of the robot.
When the robot is activated, it pings its sonars twice per second. The robot drives forward until the sensors are in a 0.2m range of an obstacle. When this is the case, the robot changes direction. The robot also flashes its red L.E.D once a second while it is in operation. If an obstacle lies in the robots path, then it will turn around and pings its sonars again until it finds a clearer path to follow.
Sonar is still in widespread use as a ranging method on autonomous vehicles. It is an effective method to use as the robot successfully managed to navigate its way around many obstacles. The sonar sensors were positioned in such a way that would allocate a widespread field of 'vision'.
The only problem with the layout of the sensors was that there was a blind spot in the middle where the receiver was. This in turn caused the robot to ignore small obstacles, for instance chair legs and drive into them as they were not detected.
To solve this problem, the circuit could be redesigned to allocate a third transmitter in the middle of the robot. Also having more than one receiver would greatly improve the accuracy of the robot.
SMT or Surface Mount Technology is a good method of designing a robot as opposed to through hole soldering because it saves space, which is useful for designing compact circuit boards on more advanced robots. In the case of the robot that was designed for this report, it is still an improvement to through hole soldering as the overall size of the robot and resources used can be greatly reduced.
