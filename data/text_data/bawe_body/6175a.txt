System identification is a way of constructing mathematical models for dynamic systems from experimental data. Recursive identification is useful for adaptive control, adaptive estimation and adaptive signal processing. The examples of this are pattern recognition, linear prediction, adaptive filtering, monitoring and fault detection. In control and system engineering, system identification techniques are used to obtain appropriate models of systems. Recursive identification plays a vital role in many control systems such as aircrafts, missiles, automobiles and ships. Dynamic characteristics of such system depend on many factors such as speed and loading, which might change over time. Adaptive control is the area concerned with design of controllers and regulators in order to adjust controlled parameters. This report relating to the use of least squares system identification is separated into three parts corresponding to the questions given and a condition to summarise the report. In part A, a test system is created by producing MATLAB code which can perform the recursive least squares system identification for any given input and output data. Some real data has been given in part B and this data is used to identify the system parameters for a mechanical "master" robot of a master/slave telemanipulator. Part C is the extension of the existing RLS algorithm by including Instrument Variables or a PLS noise model which is based on the moving average model or pseudo linear regression.
The task of part A is to complete the MATLAB code which is given to be able to use the recursive least squares system identification using ARX model on any given input and output data. In this part, the given skeleton code which was given to be able to represent the ARX model in term of being able to identify a model of any given input and output data (u and y). Any input signal can be generated in order to test the ARX model. This is given in the form of three commands such as a step input, sampled sine wave signal and random signal. The filter function is used to filter a data sequence by using a second order system model which is stable. In this model, the values of 'B' and 'A' are the numerator and denominator coefficients respectively. This program shown in Appendix A is tested with all three input commands.
As can be seen from figure 1 to 3 and table 1, the results of this program seems to run correctly because the coefficients of a model in theta track towards the "true" values [A B] and the final value of the estimate is the same as the "true" value whether the input is step input, sine wave input or random input data. Furthermore, this program is confirmed that it works correctly by testing the response using three command inputs when Gaussian noise is added to the output. This code has been shown in Appendix B.
As can be seen from figure 4, 5, 6 and table 2, Gaussian noise has an effect on the coefficients of a model. This causes that the final value of parameter estimates using different type of inputs are different. The figure 4 shows the result of the program which use step input including Gaussian noise. This result illustrates that estimated parameters converge to final values slowly, compared with the result of the program using step input without Gaussian noise (figure 1). Similarly, the coefficients of a model resulting from the use sine wave and random data input also converge to final values slowly. In addition, if the lengths of each input data are increased, this may encourage the adaptation of estimated parameters. However, it ultimately depends on the level of noise.
The modification of the algorithm including the "Forgetting factor" may be the way to improve the performance of the program. This is because the older data has less effect on the estimation of coefficients of a model. The new implemented algorithm has been shown in Appendix C. The sample result of the program being tested with a step input will be presented.
The figure 7 shows the result of the modified algorithm including the "Forgetting factor". The convergent rate seems to be more efficient than the previous result (see figure 4). The output, however, depends on the level of noise; consequently, it is difficult to compare the results with different noise level in order to know the performance of the "Forgetting factor".
The task of Part B involves identification of the system parameters for the master of a head controlled telerobot using the program called "loadass.m" in order to load data files containing the response to a 60mm step input. This step response relates to Kp and Kd in a PID controller which can help to determine the accurate dynamics model of the telerobot. The data sets used in this assignment are xp30d03.dat and xp50d20.dat which is selected by the loadass.m program. The former data set means that the proportional gain was set to 30 and the derivative gain was set to 3 whereas the latter dada set means that the proportional gain was set to 50 and the derivative gain was set to 20. The corresponding step input was generated by the command u = 60*ones (size(y)). The MATLAB code has been changed (see Appendix D) before applying further parameters to generate tests using both data sets for the following four models to evaluate which the best model is.
The development of the coefficients of each model has been shown in each data set. The best model is also determined by comparing the actual response and predicted response simulated the response to a step input of 60mm. In addition to this, the z transform of all models have been done in order to find the location of the final poles which are plotted on the unit circle. This can show whether the predicted model is stable or not and also determine the best model for predicting this mechanical system.
The results of system response show that both actual and predicted responses seem relatively similar for all four models in each data set, as can be seen from the figure 8 and 9. The actual and predicted responses are underdamped response as shown in figure 8, whereas the figure 9 shows that the actual and predicted responses are critically damped response. Overall, these predicted models are effective in modelling.
As a result of the figure 10, the model output can be shown as where e(t) is a white noise with zero mean and variance 2.
In addition, the figure 11 shows a z transform of predicted response, which presents the stability of system model. This predicted response seems to be stable because the two poles locate inside the unit circle.
As a result of the figure 12 the model output can be shown as below.
Furthermore, the locations of two poles are inside the unit circle of the z transform shown in figure13. This means that this predicted response is stable.
This model uses three coefficient of 'a', which is different from previous model. As a result of the figure 14 the model output can be shown as below.
The z transform in figure 15 shows that the predicted response is stable.
As a result of the figure 14 the model output can be shown as below.
The predicted response is also stable, but there are two poles which are complex values (see figure 17).
This model is slightly different from those previous models. In other words, both the number of coefficients of 'a' and 'b' are three. As a result of the figure 18 the model output can be shown as below.
Moreover, the predicted response is stable (see figure 19).
As a result of the figure 20, the model output can be shown as below.
The predicted response is also stable (see figure 21).
This model uses 4 coefficients of 'a' and 3 coefficients of 'b' to predict system response. As a result of the figure 22, the model output can be shown as below.
Furthermore, a z transform shows that the predicted response is stable (see figure 23).
As a result of the figure 24, the model output can be shown as below.
The predicted response is also stable as shown by a z transform from figure 25.
The results of this model after changing in data set are similar to the previous model using the same data set. In other words, both actual and predicted responses are critically damped response and the predicted response is also stable as can be seen from the figure 25 and 26, respectively.
As can be seen from figure 26, this figure plotted in logarithm scale shows the loss function or the Mean Square Error for each model. The values of the loss function for the model1 and 2 are far higher than the model3 and 4. The model3 and 4 are, therefore, more preferable as the model1 and 2. This is because the model3 and 4 are large enough to cover the true system. In addition, the model3 is preferable as the model4, but not remarkably better than the model4. The reason for this is that the model4 is more complex than the model3, but the values of the loss function resulting from both data sets for model4 are almost the same that for model3. It can be said that the model3 seems to be the best model for these data set.
The task of Part C is to update RLS algorithm by including Instrument Variables (IV) or a Moving Average noise model based on Pseudo Linear Regression. The model based on Model3 in part B has been modified by using the instrumental variable method in order to test in this task.
First of all, MATLAB algorithm was tested in the same way with part A, as can be seen this code in Appendix E. The algorithm has then been modified in order to test with the real data set as above (see the code in Appendix F).Moreover, two ARMAX models were developed based on Model3 in part B because this model seems to be the best model. The algorithms for these models have been shown in Appendix G.
The results of a test system including instrument variable are the same results as part A. This means that the modified MATLAB algorithm works appropriately with a test system.
As can be seen from figure 27 and 28, the estimated parameters resulting from the instrumental variable method are slightly different from Model3 (ARX model). This leads to the slight difference in the location of some poles, but both predicted responses are stable and they are also similar to the predicted responses of other models which are underdamped response (see Appendix H). The estimated parameters resulting from the instrumental variable method also seem to converge quickly, compared with Model3 (see figure 28). In other words, the instrumental variable method leads to higher rate of convergence, compared with the result of Model3 using ARX model (see figure 18 and 20). As a result of the figure 27, the model output can be shown as below.
From figure 28, the model output resulting from the use of data set xp50d20.dat can be also shown as below. v(t) is system noise which is uncorrelated with the instrumental variable (vector z(t)).
From figure 29, the model output resulting from the use of data set xp30d03.dat can be shown as below.
The result of ARMAX1 model is slightly different from that of ARX model. As can be seen from the figure 30, some values of predicted response are negative in the first periods of estimation. This results from the prediction error (t-1) as shown in the figure 31. However, both actual and predicted responses are underdamped response and they also seem similar. In addition, a z transform shows that the predicted responses is stable (see figure 32).
As a result of the figure 33, the model output can be shown as below.
From figure 34, both of them are critically damped response. In addition to this, the predicted responses are relatively similar to actual response. The z transform also shows that this predicted response is stable (see figure 35).
As can be seen from figure 36, the model output can be shown as below.
In this model, the predicted response seems better than ARMAX1 in the first period. Both actual and predicted responses are underdamped response. Their responses are nearly the same, as shown in figure 37. The z transform shows that predicted response is also stable (see figure 38).
From figure 39, the model output can be shown as below.
In this model, the response and stability are almost the same as ARMAX1 model, except the pole locations.
As can be seen from figure 29 to 41, pseudo linear regression or the RLS algorithm for ARMAX model works appropriately, although the rate of convergence of estimated parameters is not significantly different from RLS algorithm for ARX model.
As the determination of model structure and model validation are very important for system identification. This is because the estimated model should be accurate enough and avoiding over-parameterization should also be considered. The reason for this is that an over-parameterized model structure cause complicated computations. In determining an appropriate model structure, the loss function or the Mean Square Error are very useful for model validation. The loss function or the Mean Square Error was, therefore, plotted in order to investigate whether or not the improvement in the fit is significant. As can be seen from figure 42, both ARMAX models cannot improve the fit for those data sets. The instrumental variable method is also not significantly better than Model3 using ARX model in case of fitting model for those data sets.
In this assignment, the use of least squares system identification was presented. Recursive least squares algorithm was used for the tasks. The test system in part A demonstrated the ability of these algorithms to ensure that the program will work appropriately with the given real data collected from a mechanical "master" robot of a master/slave telemanipulator. Each model was then tested with the same two data sets so that each model can be compared in the same data sets in part B. In general, the test results illustrate that recursive least squares algorithm is effective in parameter estimation and modeling. Determining the appropriate model structure and model validation can be achieved by using the loss function or the Mean Square Error. Based on these results, it seems that Model3 using ARX model is optimal model for model representation of this dynamic system. In part C, the algorithms was implemented by using RLS algorithm including either Instrument Variables (IV) or a Moving Average noise model based on Pseudo Linear Regression in order to improve parameter estimation. The Model3 which seem to be appropriate model in part B was compared with all models in part C called IV model, ARMAX1 and ARMAX2 model. The result of this is that the IV model may do well on an increase in the rate of convergence, but it is difficult to see a noticeably improvement in performance. Pseudo linear regression for ARMAX model and instrumental variable method may overcome the problems which the disturbance v(t) is not white noise. To check this, autocorrelation and cross-correlation test should be implemented, but such tasks are beyond the scope of this assignment.
