<s>
The_AT program_NN1 created_VVN should_VM help_VVI a_AT1 company_NN1 to_TO keep_VVI track_NN1 of_IO their_APPGE computer_NN1 equipment_NN1 ._. 
</s>
<s>
The_AT company_NN1 wants_VVZ to_TO tract_VVI the_AT following_JJ information_NN1 about_II each_DD1 item_NN1 :_: When_RRQ the_AT program_NN1 starts_VVZ ,_, the_AT first_MD thing_NN1 that_CST will_VM happen_VVI is_VBZ displaying_VVG the_AT menu_NN1 ._. 
</s>
<s>
In_II the_AT case_NN1 of_IO this_DD1 program_NN1 ,_, the_AT menu_NN1 has_VHZ eight_MC different_JJ options_NN2 ._. 
</s>
<s>
These_DD2 are_VBR :_: Each_DD1 option_NN1 should_VM be_VBI activated_VVN when_CS the_AT user_NN1 input_VVN an_AT1 entry_NN1 in_II the_AT menu_NN1 ._. 
</s>
<s>
Also_RR ,_, if_CS the_AT user_NN1 enters_VVZ an_AT1 invalid_JJ entry_NN1 ,_, the_AT menu_NN1 should_VM loop_VVI and_CC offer_VVI the_AT user_NN1 the_AT opportunity_NN1 to_TO re-enter_VVI a_AT1 value_NN1 ._. 
</s>
<s>
The_AT database_NN1 should_VM have_VHI a_AT1 capacity_NN1 of_IO up_RG21 to_RG22 15_MC products_NN2 and_CC the_AT program_NN1 should_VM not_XX let_VVI the_AT user_NN1 enter_VVI a_AT1 16_MC th_NNU product_NN1 ._. 
</s>
<s>
If_CS he_PPHS1 tries_VVZ to_TO do_VDI so_RR ,_, an_AT1 error_NN1 message_NN1 should_VM tell_VVI the_AT user_NN1 that_CST the_AT limit_NN1 was_VBDZ reached_VVN ._. 
</s>
<s>
Also_RR ,_, when_CS adding_VVG an_AT1 item_NN1 ,_, some_DD checking_NN1 of_IO the_AT information_NN1 entered_VVN will_VM need_VVI to_TO take_VVI place_NN1 ._. 
</s>
<s>
First_MD ,_, the_AT program_NN1 has_VHZ to_TO check_VVI that_CST the_AT ID_NN1 entered_VVN is_VBZ in_II the_AT range_NN1 1000-9999_MCMC ._. 
</s>
<s>
Secondly_RR ,_, it_PPH1 also_RR needs_VVZ to_TO check_VVI that_CST the_AT product_NN1 room_NN1 entered_VVN is_VBZ in_II the_AT range_NN1 100-399_MCMC ._. 
</s>
<s>
Finally_RR ,_, when_CS entering_VVG a_AT1 value_NN1 for_IF an_AT1 item_NN1 ,_, the_AT program_NN1 should_VM check_VVI that_CST the_AT value_NN1 is_VBZ higher_JJR than_CSN 0_MC ._. 
</s>
<s>
When_CS this_DD1 option_NN1 is_VBZ chosen_VVN ,_, the_AT program_NN1 should_VM ask_VVI the_AT user_NN1 to_TO enter_VVI the_AT ID_NN1 of_IO the_AT item_NN1 to_TO remove_VVI ._. 
</s>
<s>
The_AT program_NN1 will_VM then_RT search_VVI the_AT records_NN2 to_TO find_VVI and_CC remove_VVI the_AT appropriate_JJ item_NN1 ._. 
</s>
<s>
If_CS the_AT program_NN1 can_VM not_XX find_VVI it_PPH1 or_CC the_AT database_NN1 does_VDZ not_XX contain_VVI any_DD items_NN2 ,_, the_AT program_NN1 should_VM tell_VVI the_AT user_NN1 that_CST the_AT item_NN1 does_VDZ n't_XX exist_VVI or_CC that_CST there_EX are_VBR no_AT items_NN2 to_TO remove_VVI ._. 
</s>
<s>
Again_RT ,_, when_CS this_DD1 option_NN1 is_VBZ selected_VVN ,_, the_AT program_NN1 will_VM first_MD ask_VVI for_IF the_AT ID_NN1 of_IO the_AT item_NN1 to_TO find_VVI ._. 
</s>
<s>
Once_CS the_AT use_NN1 inputted_VVD it_PPH1 ,_, the_AT program_NN1 will_VM search_VVI the_AT item_NN1 in_II the_AT records_NN2 and_CC display_VV0 its_APPGE information_NN1 on_II the_AT screen_NN1 ._. 
</s>
<s>
Although_CS ,_, if_CS it_PPH1 can_VM not_XX be_VBI found_VVN or_CC if_CS the_AT database_NN1 does_VDZ not_XX contain_VVI any_DD items_NN2 ,_, an_AT1 error_NN1 message_NN1 should_VM appear_VVI ._. 
</s>
<s>
The_AT program_NN1 should_VM simply_RR depreciate_VVI all_DB the_AT values_NN2 of_IO items_NN2 stored_VVN in_II the_AT database_NN1 to_II 70%_NNU of_IO what_DDQ they_PPHS2 were_VBDR before_RT ._. 
</s>
<s>
For_IF this_DD1 option_NN1 ,_, the_AT program_NN1 should_VM first_MD sort_VVI all_DB the_AT items_NN2 with_IW their_APPGE ID_NN1 numbers_NN2 then_RT display_VV0 them_PPHO2 on_II the_AT screen_NN1 ._. 
</s>
<s>
If_CS there_EX are_VBR no_AT items_NN2 to_TO sort_VVI ,_, the_AT program_NN1 should_VM just_RR display_VVI an_AT1 error_NN1 message_NN1 and_CC go_VVI back_RP to_II the_AT menu_NN1 ._. 
</s>
<s>
For_IF this_DD1 option_NN1 ,_, the_AT program_NN1 should_VM first_MD sort_VVI all_DB the_AT items_NN2 with_IW their_APPGE Room_NN1 numbers_NN2 then_RT display_VV0 them_PPHO2 on_II the_AT screen_NN1 ._. 
</s>
<s>
If_CS there_EX are_VBR no_AT items_NN2 to_TO sort_VVI ,_, the_AT program_NN1 should_VM just_RR display_VVI an_AT1 error_NN1 message_NN1 and_CC go_VVI back_RP to_II the_AT menu_NN1 ._. 
</s>
<s>
If_CS this_DD1 option_NN1 was_VBDZ chosen_VVN ,_, the_AT program_NN1 should_VM display_VVI on_II the_AT screen_NN1 all_DB the_AT items_NN2 that_CST have_VH0 a_AT1 value_NN1 that_CST is_VBZ smaller_JJR than_CSN 40_MC pounds_NN2 ._. 
</s>
<s>
If_CS there_EX are_VBR no_AT items_NN2 in_II the_AT database_NN1 ,_, the_AT program_NN1 should_VM just_RR tell_VVI the_AT user_NN1 that_CST there_EX are_VBR no_AT items_NN2 available_JJ ._. 
</s>
<s>
Finally_RR ,_, when_CS the_AT user_NN1 decides_VVZ to_TO quit_VVI the_AT program_NN1 ,_, the_AT program_NN1 should_VM simply_RR end_VVI ._. 
</s>
<s>
First_MD of_IO all_DB ,_, in_BCL21 order_BCL22 to_TO store_VVI the_AT records_NN2 and_CC meet_VVI the_AT assignment_NN1 specification_NN1 ,_, a_AT1 record_NN1 type_NN1 and_CC an_AT1 array_NN1 type_NN1 will_VM need_VVI to_TO be_VBI created_VVN ._. 
</s>
<s>
The_AT record_NN1 type_NN1 will_VM be_VBI used_VVN to_TO store_VVI the_AT different_JJ information_NN1 about_II each_DD1 product_NN1 ._. 
</s>
<s>
The_AT array_NN1 type_NN1 will_VM be_VBI used_VMK to_TO be_VBI able_JK to_TO store_VVI up_RG21 to_RG22 15_MC different_JJ products_NN2 ._. 
</s>
<s>
One_MC1 record_NN1 should_VM be_VBI enough_RR as_CSA they_PPHS2 all_DB contain_VV0 the_AT same_DA type_NN1 of_IO information_NN1 :_: In_BCL21 order_BCL22 to_TO differentiate_VVI the_AT three_MC products_NN2 ,_, I_PPIS1 will_VM use_VVI an_AT1 array_NN1 type_NN1 that_CST will_VM allow_VVI me_PPIO1 to_TO avoid_VVI using_VVG a_AT1 global_JJ array_NN1 variable_NN1 ,_, which_DDQ is_VBZ not_XX allowed_VVN for_IF this_DD1 assignment_NN1 ._. 
</s>
<s>
First_MD of_IO all_DB ,_, as_CSA the_AT menu_NN1 will_VM need_VVI to_TO loop_VVI until_CS the_AT user_NN1 decides_VVZ to_TO quit_VVI the_AT program_NN1 ,_, a_AT1 function_NN1 for_IF this_DD1 could_VM be_VBI created_VVN to_TO avoid_VVI entering_VVG the_AT same_DA code_NN1 many_DA2 times_NNT2 ._. 
</s>
<s>
The_AT function_NN1 would_VM then_RT simply_RR return_VVI the_AT value_NN1 of_IO the_AT choice_NN1 entered_VVN and_CC the_AT main_JJ part_NN1 of_IO the_AT program_NN1 would_VM check_VVI what_DDQ the_AT user_NN1 's_GE choice_NN1 is_VBZ ._. 
</s>
<s>
In_BCL21 order_BCL22 to_TO store_VVI the_AT value_NN1 ,_, a_AT1 char_NN1 variable_NN1 should_VM be_VBI used_VVN because_CS it_PPH1 can_VM only_RR hold_VVI 1_MC1 character_NN1 ,_, which_DDQ is_VBZ what_DDQ we_PPIS2 have_VH0 to_TO try_VVI to_TO do_VDI in_II this_DD1 assignment_NN1 ._. 
</s>
<s>
According_II21 to_II22 the_AT value_NN1 entered_VVD ,_, a_AT1 procedure_NN1 or_CC function_NN1 for_IF each_DD1 option_NN1 could_VM be_VBI called_VVN ._. 
</s>
<s>
Underneath_RL is_VBZ an_AT1 example_NN1 on_II how_RRQ the_AT value_NN1 could_VM be_VBI checked_VVN (_( assuming_VVG that_CST the_AT variable_JJ name_NN1 is_VBZ Choice_JJ )_) :_: As_CSA you_PPY can_VM see_VVI ,_, this_DD1 will_VM deal_VVI with_IW the_AT lower_JJR case_NN1 and_CC upper_JJ case_NN1 entries_NN2 ._. 
</s>
<s>
Also_RR ,_, if_CS the_AT value_NN1 does_VDZ not_XX match_VVI any_DD of_IO the_AT options_NN2 ,_, it_PPH1 will_VM ask_VVI the_AT user_NN1 to_TO re-enter_VVI an_AT1 option_NN1 ._. 
</s>
<s>
First_MD of_IO all_DB ,_, in_BCL21 order_BCL22 to_TO keep_VVI track_NN1 of_IO the_AT number_NN1 of_IO products_NN2 in_II the_AT database_NN1 ,_, a_AT1 counter_NN1 will_VM need_VVI to_TO be_VBI used_VVN ._. 
</s>
<s>
So_RR ,_, when_CS an_AT1 item_NN1 is_VBZ added_VVN to_II the_AT database_NN1 ,_, the_AT counter_NN1 increases_NN2 of_IO 1_MC1 ._. 
</s>
<s>
This_DD1 will_VM allow_VVI the_AT program_NN1 to_TO know_VVI if_CSW there_EX are_VBR already_RR items_NN2 stored_VVN in_II the_AT application_NN1 or_CC if_CS the_AT maximum_JJ amount_NN1 of_IO items_NN2 is_VBZ stored_VVN ._. 
</s>
<s>
First_MD ,_, the_AT program_NN1 has_VHZ to_TO check_VVI that_CST the_AT counter_NN1 is_VBZ not_XX greater_JJR than_CSN 15_MC (_( limit_NN1 of_IO items_NN2 )_) ._. 
</s>
<s>
If_CS it_PPH1 is_VBZ ,_, the_AT program_NN1 should_VM tell_VVI the_AT user_NN1 and_CC then_RT go_VV0 back_RP to_II the_AT menu_NN1 ._. 
</s>
<s>
If_CS it_PPH1 's_VBZ not_XX above_II the_AT limit_NN1 ,_, then_RT the_AT program_NN1 should_VM start_VVI the_AT sequences_NN2 to_TO add_VVI an_AT1 item_NN1 ._. 
</s>
<s>
First_MD ,_, the_AT program_NN1 will_VM ask_VVI for_IF the_AT ID_NN1 of_IO the_AT new_JJ item_NN1 ._. 
</s>
<s>
Once_RR entered_VVN ,_, the_AT program_NN1 has_VHZ to_TO check_VVI that_CST the_AT ID_NN1 is_VBZ in_II the_AT correct_JJ range_NN1 and_CC that_CST it_PPH1 has_VHZ n't_XX already_RR been_VBN used_VVN by_II another_DD1 product_NN1 ._. 
</s>
<s>
In_BCL21 order_BCL22 to_TO do_VDI this_DD1 ,_, the_AT application_NN1 has_VHZ to_TO compare_VVI each_DD1 ID_NN1 with_IW the_AT value_NN1 entered_VVD ._. 
</s>
<s>
A_ZZ1 for_IF loop_NN1 ,_, while_CS loop_NN1 and_CC a_AT1 counter_NN1 should_VM be_VBI used_VVN to_TO check_VVI the_AT validity_NN1 of_IO the_AT ID_NN1 ._. 
</s>
<s>
Also_RR ,_, the_AT program_NN1 will_VM need_VVI to_TO "_" doublecheck_VVI "_" the_AT ID_NN1 from_II the_AT 1_MC1 st_NNU position_NN1 to_II the_AT array_NN1 until_CS the_AT last_MD and_CC then_RT from_II the_AT last_MD until_CS the_AT 1_MC1 st_NNU position_NN1 in_BCL21 order_BCL22 to_TO make_VVI sure_JJ that_CST the_AT ID_NN1 is_VBZ only_RR accepted_VVN when_CS a_AT1 unique_JJ value_NN1 has_VHZ been_VBN entered_VVN ._. 
</s>
<s>
After_CS the_AT ID_NN1 ,_, the_AT program_NN1 will_VM ask_VVI for_IF the_AT user_NN1 to_TO enter_VVI the_AT name_NN1 and_CC the_AT owner_NN1 of_IO the_AT item_NN1 ._. 
</s>
<s>
The_AT program_NN1 should_VM simply_RR use_VVI a_AT1 string_NN1 that_CST would_VM store_VVI both_DB2 of_IO this_DD1 information_NN1 ._. 
</s>
<s>
Next_MD is_VBZ the_AT Room_NN1 Number_NN1 ,_, which_DDQ needs_VVZ to_TO be_VBI checked_VVN to_TO make_VVI sure_JJ that_CST it_PPH1 is_VBZ in_II the_AT range_NN1 100_MC to_II 399_MC ._. 
</s>
<s>
This_DD1 can_VM be_VBI done_VDN just_RR like_II the_AT ID_NN1 using_VVG a_AT1 while_NNT1 loop_NN1 ._. 
</s>
<s>
This_DD1 will_VM be_VBI stored_VVN in_II an_AT1 integer_NN1 variable_NN1 ._. 
</s>
<s>
Finally_RR ,_, the_AT Value_NN1 also_RR has_VHZ to_TO be_VBI checked_VVN ._. 
</s>
<s>
It_PPH1 needs_VVZ to_TO be_VBI higher_JJR or_CC equal_JJ to_TO zero_VVI ._. 
</s>
<s>
Again_RT ,_, a_AT1 while_NNT1 loop_NN1 can_VM be_VBI used_VVN to_TO check_VVI the_AT input_NN1 but_CCB the_AT value_NN1 will_VM need_VVI to_TO be_VBI stored_VVN in_II a_AT1 real_JJ variable_NN1 as_CSA it_PPH1 needs_VVZ to_TO include_VVI the_AT pounds_NN2 and_CC pennies_NNU2 ._. 
</s>
<s>
To_TO remove_VVI an_AT1 item_NN1 ,_, the_AT 1_MC1 st_NNU thing_NN1 that_CST the_AT program_NN1 does_VDZ is_VBZ to_TO check_VVI that_CST the_AT counter_NN1 is_VBZ greater_JJR than_CSN 1_MC1 to_TO make_VVI sure_JJ that_CST the_AT database_NN1 contains_VVZ at_RR21 least_RR22 1_MC1 item_NN1 (_( to_TO remove_VVI )_) ._. 
</s>
<s>
If_CS not_XX ,_, an_AT1 error_NN1 message_NN1 will_VM appear_VVI and_CC the_AT user_NN1 should_VM have_VHI the_AT opportunity_NN1 to_TO re-enter_VVI (_( while_CS loop_NN1 to_TO do_VDI this_DD1 )_) ._. 
</s>
<s>
If_CS it_PPH1 is_VBZ ,_, then_RT it_PPH1 will_VM ask_VVI the_AT user_NN1 to_TO enter_VVI an_AT1 ID_NN1 ,_, which_DDQ will_VM need_VVI to_TO be_VBI compared_VVN with_IW all_DB the_AT items_NN2 ID_NN1 to_TO find_VVI the_AT right_JJ item_NN1 to_TO remove_VVI ._. 
</s>
<s>
To_TO delete_VVI the_AT item_NN1 ,_, the_AT program_NN1 will_VM simply_RR copy_VVI all_DB the_AT items_NN2 that_CST are_VBR after_II the_AT one_PN1 that_CST was_VBDZ found_VVN and_CC past_RL it_PPH1 over_II it_PPH1 ._. 
</s>
<s>
For_REX21 example_REX22 :_: If_CS we_PPIS2 needed_VVD to_TO remove_VVI 1001_MC from_II the_AT items_NN2 stored_VVN below_RL :_: To_TO find_VVI an_AT1 item_NN1 ,_, the_AT program_NN1 will_VM first_MD need_VVI to_TO ask_VVI the_AT user_NN1 to_TO enter_VVI the_AT ID_NN1 of_IO the_AT product_NN1 ._. 
</s>
<s>
Then_RT the_AT program_NN1 should_VM use_VVI a_AT1 sentinel_NN1 search_NN1 ,_, which_DDQ works_VVZ like_II this_DD1 :_: The_AT code_NN1 above_RL ,_, compares_VVZ the_AT ID_NN1 entered_VVN with_IW the_AT Record_NN1 ID_NN1 at_II position_NN1 "_" pos_NN2 "_" ._. 
</s>
<s>
While_CS it_PPH1 does_VDZ n't_XX match_VVI it_PPH1 ,_, the_AT program_NN1 increments_VVZ the_AT value_NN1 of_IO pos_NN2 and_CC re-compare_VV0 it_PPH1 until_CS the_AT value_NN1 of_IO pos_NN2 is_VBZ the_AT same_DA as_CSA the_AT counter_NN1 (_( number_NN1 of_IO products_NN2 in_II database_NN1 )_) ._. 
</s>
<s>
Once_CS it_PPH1 finds_VVZ a_AT1 match_NN1 ,_, the_AT program_NN1 will_VM then_RT have_VHI to_TO show_VVI all_DB the_AT items_NN2 ._. 
</s>
<s>
Note_VV0 :_: If_CS there_EX are_VBR no_AT items_NN2 in_II the_AT data_NN when_CS calling_VVG the_AT procedure_NN1 to_TO find_VVI an_AT1 item_NN1 ,_, an_AT1 error_NN1 message_NN1 should_VM appear_VVI on_II the_AT screen_NN1 ._. 
</s>
<s>
Also_RR ,_, if_CS the_AT ID_NN1 does_VDZ not_XX match_VVI any_DD of_IO the_AT records_NN2 ,_, another_DD1 message_NN1 should_VM appear_VVI on_II the_AT screen_NN1 ._. 
</s>
<s>
To_TO depreciate_VVI all_DB the_AT value_NN1 from_II the_AT records_NN2 ,_, the_AT program_NN1 should_VM simply_RR use_VVI a_AT1 "_" for_IF loop_NN1 "_" that_CST does_VDZ the_AT following_JJ to_TO change_VVI the_AT value_NN1 to_II 70%_NNU of_IO its_APPGE current_JJ value_NN1 :_: Example_NN1 :_: Note_VV0 :_: If_CS there_EX are_VBR no_AT items_NN2 in_II the_AT database_NN1 when_CS calling_VVG the_AT procedure_NN1 to_TO find_VVI an_AT1 item_NN1 ,_, an_AT1 error_NN1 message_NN1 will_VM appear_VVI on_II the_AT screen_NN1 ._. 
</s>
<s>
In_BCL21 order_BCL22 to_TO sort_VVI the_AT Items_NN2 with_IW the_AT ID_NN1 's_GE or_CC with_IW the_AT Room_NN1 No_UH ,_, a_AT1 bubble_NN1 sort_NN1 should_VM be_VBI used_VVN ._. 
</s>
<s>
It_PPH1 can_VM be_VBI used_VVN those_DD2 two_MC options_NN2 because_CS it_PPH1 needs_VVZ to_TO do_VDI exactly_RR the_AT same_DA thing_NN1 except_CS21 that_CS22 the_AT values_NN2 that_CST need_VV0 to_TO be_VBI sorted_VVN are_VBR different_JJ ._. 
</s>
<s>
This_DD1 means_VVZ that_CST one_MC1 procedure_NN1 should_VM be_VBI created_VVN for_IF each_DD1 option_NN1 ._. 
</s>
<s>
Underneath_RL is_VBZ an_AT1 explanation_NN1 on_II how_RRQ the_AT bubble_NN1 sort_NN1 system_NN1 works_VVZ :_: This_DD1 code_NN1 will_NN1 in_II fact_NN1 compare_VV0 the_AT 1_MC1 st_NNU value_NN1 concerned_JJ with_IW the_AT 2_MC nd_NNU value_NN1 ._. 
</s>
<s>
If_CS the_AT second_NNT1 is_VBZ smaller_JJR ,_, it_PPH1 will_VM call_VVI the_AT swap_NN1 procedure_NN1 (_( see_VV0 Procedure_NN1 Swap_VV0 for_IF a_AT1 description_NN1 )_) to_TO swap_VVI the_AT values_NN2 ._. 
</s>
<s>
Then_RT ,_, the_AT 'for_NN1 loop'_NN1 will_VM continue_VVI by_II comparing_VVG the_AT 2_MC nd_NNU value_NN1 with_IW the_AT 3_MC rd_NN1 one_MC1 and_CC will_VM do_VDI the_AT same_DA until_CS the_AT for_IF loop_NN1 ends_NN2 ._. 
</s>
<s>
This_DD1 needs_VVZ to_TO be_VBI within_II another_DD1 'for_NN1 loop'_NN1 as_II the_AT program_NN1 needs_VVZ to_TO do_VDI it_PPH1 14_MC times_NNT2 (_( for_IF this_DD1 work_NN1 as_CSA there_EX are_VBR 15_MC products_NN2 max_NN1 )_) in_BCL21 order_BCL22 to_TO sort_VVI all_DB the_AT values_NN2 in_II increasing_JJ order_NN1 ._. 
</s>
<s>
Note_VV0 :_: In_BCL21 order_BCL22 to_TO swap_VVI the_AT records_NN2 ,_, the_AT whole_JJ array_NN1 should_VM be_VBI swapped_VVN so_RG all_DB the_AT information_NN1 is_VBZ changed_VVN at_RR21 once_RR22 ._. 
</s>
<s>
Once_CS the_AT values_NN2 have_VH0 been_VBN passed_VVN by_II passing_JJ parameters_NN2 in_II the_AT sorting_NN1 procedures_NN2 ,_, the_AT swap_NN1 function_NN1 will_VM use_VVI a_AT1 temp_NN1 (_( temporary_JJ )_) variable_NN1 ._. 
</s>
<s>
The_AT way_NN1 it_PPH1 works_VVZ is_VBZ simple_JJ ._. 
</s>
<s>
The_AT value_NN1 of_IO the_AT temporary_JJ variable_NN1 is_VBZ first_MD assigned_VVN the_AT value_NN1 of_IO 1_MC1 st_NNU value_NN1 ._. 
</s>
<s>
Then_RT ,_, value_NN1 1_MC1 is_VBZ assigned_VVN the_AT 2_MC nd_NNU value_NN1 ._. 
</s>
<s>
Finally_RR ,_, value_NN1 2_MC is_VBZ assigned_VVN the_AT value_NN1 of_IO the_AT temporary_JJ variable_NN1 ._. 
</s>
<s>
This_DD1 way_NN1 ,_, all_DB the_AT values_NN2 have_VH0 been_VBN swapped_VVN ._. 
</s>
<s>
See_VV0 underneath_RL for_IF an_AT1 example_NN1 of_IO code_NN1 to_TO use_VVI in_II the_AT Delphi_NP1 program_NN1 :_: In_BCL21 order_BCL22 to_TO display_VVI all_DB the_AT items_NN2 ,_, the_AT program_NN1 will_VM need_VVI to_TO check_VVI all_DB the_AT value_NN1 of_IO the_AT items_NN2 and_CC display_VV0 the_AT ones_NN2 that_CST have_VH0 a_AT1 value_NN1 under_RG 40_MC ._. 
</s>
<s>
The_AT most_RGT efficient_JJ way_NN1 to_TO do_VDI so_RR ,_, would_VM be_VBI to_TO use_VVI a_AT1 'for_NN1 loop'_NN1 with_IW an_AT1 'if_NN1 statement'_NN1 within_II it_PPH1 ._. 
</s>
<s>
Example_NN1 :_: Quitting_VVG the_AT program_NN1 does_VDZ n't_XX need_VVI a_AT1 procedure_NN1 ._. 
</s>
<s>
In_II the_AT main_JJ program_NN1 part_NN1 ,_, a_AT1 check_NN1 if_CS the_AT user_NN1 enters_VVZ q_ZZ1 or_CC Q_ZZ1 should_VM be_VBI made_VVN to_TO quit_VVI the_AT program_NN1 ._. 
</s>
<s>
This_DD1 means_VVZ that_CST in_BCL21 order_BCL22 to_TO quit_VVI the_AT program_NN1 ,_, the_AT user_NN1 should_VM simply_RR enter_VVI q_ZZ1 or_CC Q_ZZ1 in_II the_AT menu_NN1 ._. 
</s>
<s>
e.g._REX 1_MC1 e.g._REX 2_MC ._. 
</s>
<s>
To_TO describe_VVI a_AT1 program_NN1 ,_, as_II its_APPGE name_NN1 indicates_VVZ it_PPH1 ,_, a_AT1 basic_JJ algorithm_NN1 is_VBZ a_AT1 sort_NN1 of_IO very_RG simplified_JJ version_NN1 of_IO the_AT complete_JJ program_NN1 ._. 
</s>
<s>
Each_DD1 step_NN1 of_IO the_AT algorithm_NN1 may_VM also_RR contain_VVI some_DD "_" sub-steps_NN2 "_" or_CC sub-sub-sub_JJ steps_NN2 that_CST need_VV0 to_TO be_VBI explained_VVN and_CC refined_JJ ._. 
</s>
<s>
For_IF this_DD1 program_NN1 ,_, these_DD2 are_VBR the_AT steps_NN2 that_CST needed_VVD to_TO be_VBI "_" refined_VVN "_" :_: Adding_VVG an_AT1 item_NN1 :_: in_BCL21 order_BCL22 to_TO add_VVI an_AT1 item_NN1 in_II the_AT database_NN1 ,_, the_AT program_NN1 will_VM need_VVI to_TO carry_VVI out_RP some_DD information_NN1 checking_VVG ._. 
</s>
<s>
These_DD2 are_VBR :_: ID_NN1 must_VM not_XX be_VBI different_JJ from_II all_DB the_AT other_JJ current_JJ ID_NN1 's_GE and_CC it_PPH1 must_VM be_VBI in_II range_NN1 1000_MC to_II 1999_MC to_TO be_VBI accepted_VVN ._. 
</s>
<s>
If_CS not_XX ,_, error_NN1 message_NN1 should_VM appear_VVI and_CC allow_VVI user_NN1 to_TO re-enter_VVI ._. 
</s>
<s>
Room_VV0% No_AT has_VHZ to_TO be_VBI in_II range_NN1 100-399_MCMC ._. 
</s>
<s>
Value_NN1 of_IO item_NN1 has_VHZ to_TO be_VBI higher_JJR or_CC equal_JJ to_II 0_MC ._. 
</s>
<s>
Removing_VVG &;_NULL Finding_VVG an_AT1 item_NN1 :_: Again_RT ,_, when_CS entering_VVG the_AT ID_NN1 to_TO remove_VVI an_AT1 item_NN1 ,_, the_AT program_NN1 has_VHZ to_TO check_VVI that_DD1 information_NN1 entered_VVN is_VBZ valid_JJ ._. 
</s>
<s>
The_AT program_NN1 has_VHZ to_TO loop_VVI until_CS the_AT ID_NN1 entered_VVN by_II the_AT user_NN1 matches_VVZ one_MC1 of_IO the_AT record_NN1 ._. 
</s>
<s>
Once_CS the_AT ID_NN1 is_VBZ accepted_VVN ,_, it_PPH1 will_VM delete_VVI the_AT record_NN1 that_CST has_VHZ the_AT same_DA ID_NN1 ._. 
</s>
<s>
Finding_VVG an_AT1 item_NN1 works_VVZ exactly_RR the_AT same_DA way_NN1 ,_, except_CS21 that_CS22 it_PPH1 does_VDZ n't_XX need_VVI to_TO loop_VVI ._. 
</s>
<s>
If_CS the_AT ID_NN1 does_VDZ not_XX match_VVI a_AT1 record_NN1 ,_, the_AT program_NN1 should_VM go_VVI back_RP to_II the_AT menu_NN1 ._. 
</s>
<s>
Finally_RR ,_, for_IF those_DD2 two_MC options_NN2 ,_, the_AT program_NN1 should_VM use_VVI a_AT1 'sentinel_NN1 search'_NN1 ._. 
</s>
<s>
Depreciate_VV0 all_DB the_AT items_NN2 value_NN1 :_: using_VVG a_AT1 for_IF loop_NN1 ,_, the_AT program_NN1 should_VM use_VVI the_AT following_JJ formula_NN1 to_TO depreciate_VVI the_AT value_NN1 of_IO each_DD1 item_NN1 :_: Value_NN1 :_: =_FO (_( Value*10_FO )_) /70_MF ._. 
</s>
<s>
As_CSA required_VVN by_II the_AT specification_NN1 ,_, I_PPIS1 have_VH0 to_TO use_VVI all_DB the_AT facilities_NN2 that_CST we_PPIS2 've_VH0 learnt_VVN for_IF this_DD1 work_NN1 ._. 
</s>
<s>
The_AT easiest_JJT and_CC most_RGT effective_JJ way_NN1 for_IF me_PPIO1 is_VBZ to_TO use_VVI one_MC1 record_NN1 type_NN1 (_( which_DDQ can_VM be_VBI done_VDN in_II this_DD1 case_NN1 all_DB the_AT items_NN2 records_NN2 will_VM have_VHI exactly_RR the_AT same_DA fields_NN2 )_) which_DDQ I_PPIS1 would_VM relate_VVI with_IW an_AT1 array_NN1 type_NN1 &lsqb;_( 1_MC1 .._... 16_MC &rsqb;_) ._. 
</s>
<s>
The_AT big_JJ advantage_NN1 of_IO doing_VDG this_DD1 is_VBZ that_CST I_PPIS1 will_VM allow_VVI me_PPIO1 to_TO store_VVI many_DA2 different_JJ records_NN2 and_CC avoid_VVI repeating_VVG the_AT same_DA code_NN1 many_DA2 times_NNT2 ._. 
</s>
<s>
In_BCL21 order_BCL22 to_TO find_VVI what_DDQ should_VM be_VBI part_NN1 of_IO a_AT1 procedure_NN1 in_II the_AT program_NN1 ,_, the_AT best_JJT thing_NN1 to_TO do_VDI is_VBZ to_TO try_VVI to_TO identify_VVI the_AT different_JJ tasks_NN2 that_CST it_PPH1 needs_VVZ to_TO carry_VVI out_RP ._. 
</s>
<s>
These_DD2 are_VBR :_: As_CSA you_PPY can_VM see_VVI above_RL ,_, the_AT program_NN1 can_VM easily_RR be_VBI spread_VVN into_II 9_MC tasks_NN2 ._. 
</s>
<s>
We_PPIS2 could_VM use_VVI this_DD1 as_II an_AT1 example_NN1 to_TO spread_VVI the_AT work_NN1 in_II procedures_NN2 or_CC functions_NN2 ._. 
</s>
<s>
First_MD of_IO all_DB ,_, the_AT 1_MC1 st_NNU task_NN1 do_VD0 not_XX really_RR need_VVI a_AT1 procedure_NN1 as_CSA it_PPH1 should_VM be_VBI included_VVN in_II the_AT "_" main_JJ body_NN1 "_" of_IO the_AT program_NN1 (_( begin_VV0 end_NN1 ._. )_) ._. 
</s>
<s>
Secondly_RR ,_, menu_NN1 could_VM use_VVI a_AT1 function_NN1 as_CSA it_PPH1 needs_VVZ to_TO return_VVI 1_MC1 value_NN1 ,_, which_DDQ is_VBZ the_AT choice_NN1 entered_VVN by_II the_AT user_NN1 ._. 
</s>
<s>
Once_CS the_AT value_NN1 is_VBZ returned_VVN to_II the_AT main_JJ program_NN1 ,_, a_AT1 selection_NN1 statement_NN1 should_VM check_VVI what_DDQ has_VHZ been_VBN entered_VVN in_II the_AT menu_NN1 ._. 
</s>
<s>
For_IF each_DD1 choice_NN1 ,_, the_AT program_NN1 should_VM call_VVI a_AT1 procedure_NN1 that_CST would_VM return_VVI the_AT value_NN1 when_RRQ necessary_JJ (_( using_VVG parameters_NN2 passing_VVG )_) ._. 
</s>
<s>
The_AT other_JJ procedures_NN2 are_VBR as_CSA shown_VVN underneath_RL ._. 
</s>
<s>
There_EX will_VM be_VBI one_PN1 to_II :_: You_PPY will_VM notice_VVI that_CST the_AT order_NN1 of_IO the_AT records_NN2 ,_, functions_NN2 ,_, procedures_NN2 and_CC main_JJ body_NN1 of_IO the_AT program_NN1 has_VHZ changed_VVN a_AT1 little_JJ bit_NN1 ._. 
</s>
<s>
This_DD1 is_VBZ simply_RR because_CS in_II order_NN1 (_( for_IF the_AT program_NN1 )_) to_TO be_VBI able_JK to_TO recognize_VVI all_DB the_AT names_NN2 ,_, procedures_NN2 ,_, etc_RA ..._... it_PPH1 needs_VVZ to_TO be_VBI written_VVN in_II a_AT1 specific_JJ order_NN1 ._. 
</s>
<s>
In_II fact_NN1 ,_, it_PPH1 simply_RR has_VHZ to_TO be_VBI declared_VVN before_II using_VVG it_PPH1 ._. 
</s>
<s>
Although_CS ,_, the_AT program_NN1 also_RR needs_VVZ to_TO show_VVI the_AT different_JJ steps_NN2 of_IO each_DD1 options_NN2 in_II the_AT right_JJ order_NN1 ._. 
</s>
<s>
This_DD1 can_VM simply_RR be_VBI done_VDN by_II calling_VVG the_AT appropriate_JJ procedure_NN1 or_CC function_NN1 at_II the_AT appropriate_JJ time_NNT1 ._. 
</s>
<s>
So_RR in_II the_AT program_NN1 ,_, I_PPIS1 had_VHD to_TO first_MD declare_VVI the_AT record_NN1 type_NN1 and_CC array_NN1 type_NN1 ._. 
</s>
<s>
Then_RT ,_, it_PPH1 uses_VVZ it_PPH1 with_IW the_AT array_NN1 type_NN1 declared_VVN and_CC with_IW the_AT local_JJ variable_NN1 based_VVN on_II the_AT array_NN1 type_NN1 ._. 
</s>
<s>
As_CSA indicated_VVN in_II the_AT Test_NN1 Plan_NN1 ,_, one_MC1 problem_NN1 appeared_VVD when_CS implementing_VVG and_CC running_VVG the_AT program_NN1 ._. 
</s>
<s>
The_AT problem_NN1 was_VBDZ that_CST the_AT program_NN1 would_VM accept_VVI 10000_MC as_II an_AT1 ID_NN1 when_CS adding_VVG an_AT1 item_NN1 to_II the_AT database_NN1 ._. 
</s>
<s>
This_DD1 was_VBDZ quite_RG important_JJ as_CSA it_PPH1 did_VDD not_XX match_VVI the_AT specification_NN1 requirement_NN1 ._. 
</s>
<s>
In_BCL21 order_BCL22 to_TO solve_VVI this_DD1 problem_NN1 ,_, here_RL are_VBR the_AT steps_NN2 that_CST I_PPIS1 followed_VVD :_: In_II this_DD1 case_NN1 ,_, the_AT source_NN1 code_NN1 that_CST I_PPIS1 wrote_VVD in_II Delphi_NP1 did_VDD not_XX match_VVI the_AT pseudocode_NN1 ._. 
</s>
<s>
It_PPH1 says_VVZ in_II the_AT pseudocode_NN1 that_CST while_CS the_AT ID_NN1 entered_VVN is_VBZ greater_JJR than_CSN 9999_MC or_CC smaller_JJR than_CSN 999_MC then_RT ,_, it_PPH1 is_VBZ incorrect_JJ ._. 
</s>
<s>
When_CS I_PPIS1 checked_VVD my_APPGE Delphi_NP1 code_NN1 ,_, it_PPH1 is_VBZ this_DD1 statement_NN1 that_CST was_VBDZ wrong_JJ in_II the_AT "_" additem_NN1 "_" procedure_NN1 :_: If_CS you_PPY compare_VV0 to_II the_AT pseudocode_NN1 version_NN1 of_IO this_DD1 piece_NN1 of_IO code_NN1 ,_, you_PPY will_VM easily_RR understand_VVI where_RRQ the_AT mistake_NN1 is_VBZ :_: The_AT wrong_JJ version_NN1 ,_, does_VDZ accepts_VVZ 10000_MC as_II an_AT1 ID_NN1 ._. 
</s>
<s>
On_II the_AT other_JJ hand_NN1 ,_, the_AT one_PN1 from_II the_AT pseudocode_NN1 does_VDZ not_XX accept_VVI it_PPH1 ._. 
</s>
<s>
To_TO solve_VVI the_AT problem_NN1 once_RR41 and_RR42 for_RR43 all_RR44 ,_, all_DB I_PPIS1 had_VHD to_TO do_VDI is_VBZ to_TO modify_VVI the_AT wrong_JJ piece_NN1 of_IO information_NN1 from_II the_AT Delphi_NP1 source_NN1 code_NN1 ._. 
</s>
<s>
I_PPIS1 could_VM then_RT compile_VVI the_AT program_NN1 and_CC run_VVI it_PPH1 again_RT to_TO check_VVI that_CST it_PPH1 was_VBDZ working_VVG as_CSA expected_VVN ._. 
</s>
<s>
Finally_RR ,_, you_PPY will_VM also_RR notice_VVI that_CST the_AT program_NN1 matches_VVZ perfectly_RR the_AT program_NN1 specification_NN1 and_CC design_VV0 that_DD1 was_VBDZ planned_VVN ._. 
</s>
