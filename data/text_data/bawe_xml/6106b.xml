<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE TEI.2 SYSTEM "tei_bawe.dtd">
<TEI.2 id="_6106b" n="version 1.0">
<teiHeader>
<fileDesc>
<titleStmt>
<title>A Failed IT Project Case Study</title>
</titleStmt>
<extent/>
<publicationStmt>
<distributor>British Academic Written English (BAWE) corpus</distributor>
<availability>
<p>The British Academic Written English (BAWE) corpus was developed at the Universities of Warwick, Reading and Oxford Brookes, under the directorship of Hilary Nesi and Sheena Gardner (formerly of the Centre for Applied Linguistics [previously called CELTE], Warwick), Paul Thompson (Department of Applied Linguistics, Reading) and Paul Wickens (Westminster Institute of Education, Oxford Brookes), with funding from the ESRC. Subject to the rights of the these institutions in the BAWE corpus, and pursuant to the ESRC agreement, the BAWE corpus is available to researchers for research purposes PROVIDED THAT the following conditions are met:</p>
<p>1. The corpus files are not distributed in either their original form or in modified form.</p>
<p>2. The texts are used for research purposes only; they should not be reproduced in teaching materials.</p>
<p>3. The texts are not reproduced in full for a wider audience/readership, although researchers are free to quote short passages of text (up to 200 running words from any given text).</p>
<p>4. The BAWE corpus developers (contact: BAWE@warwick.ac.uk) are informed of all projects, dissertations, theses, presentations or publications arising from analysis of the corpus.</p>
<p>5. Researchers acknowledge their use of the corpus using the following form of words: "The data in this study come from the British Academic Written English (BAWE) corpus, which was developed at the Universities of Warwick, Reading and Oxford Brookes under the directorship of Hilary Nesi and Sheena Gardner (formerly of the Centre for Applied Linguistics [previously called CELTE], Warwick), Paul Thompson (Department of Applied Linguistics, Reading) and Paul Wickens (Westminster Institute of Education, Oxford Brookes), with funding from the ESRC (RES-000-23-0800)."</p>
</availability>
</publicationStmt>
<notesStmt>
<note resp="British Academic Written English (BAWE) corpus project">Page header contains: student name; date. Page footer contains: page number. </note>
</notesStmt>
<sourceDesc>
<p n="level">1</p>
<p n="date">2005-03</p>
<p n="module title">Software Engineering 1</p>
<p n="module code">CS1TS2</p>
<p n="genre family">Critique</p>
<p n="discipline">Computer Science</p>
<p n="disciplinary group">PS</p>
<p n="grade">D</p>
<p n="number of authors">1</p>
<p n="number of words">1853</p>
<p n="number of s-units">59</p>
<p n="number of p">15</p>
<p n="number of tables">0</p>
<p n="number of figures">0</p>
<p n="number of block quotes">0</p>
<p n="number of formulae">0</p>
<p n="number of lists">0</p>
<p n="number of paragraphs formatted like lists">0</p>
<p n="abstract present">no abstract</p>
<p n="average words per s-unit">31.4</p>
<p n="average s-units per p">3.9</p>
<p n="macrotype of assignment">simple assignment</p>
</sourceDesc>
</fileDesc>
<encodingDesc>
<p>TEI P4 (documented in: BAWE.documentation.pdf)</p>
</encodingDesc>
<profileDesc>
<particDesc>
<person>
<p n="gender">m</p>
<p n="year of birth">1986</p>
<p n="first language">English</p>
<p n="education">UKa</p>
<p n="course">Information Technology</p>
<p n="student ID">6106</p>
</person>
</particDesc>
</profileDesc>
</teiHeader>
<text>
<front>
<titlePage>
<titlePart rend="underlined bold">CS1TS2 - Software Engineering</titlePart>
<docTitle>
<titlePart rend="underlined bold">Tiptree - A Failed IT Project</titlePart>
</docTitle>
</titlePage>
</front>
<body>
<div1 type="section">
<p n="p1.15">
<s n="s1.2;p1.15">Tiptree is a UK based book distributing company that has been in operation for over forty years. </s>
<s n="s2.2;p1.15">As a distributor, Tiptree would take into its warehouse a mass of books from a range of publishers such as Dorling Kindersley, Walker, Little Brown and Virgin to name a few, and dispatch them to individual bookshops around the UK. </s>
</p>
<p n="p2.15">
<s n="s1.3;p2.15">In 1992, Tiptree won the British Book Awards Distributor of the Year, and decided to implement a Â£1.5 million electronic warehousing system to keep their company ahead of all other competitors, even though the current system had been working perfectly for many years. </s>
<s n="s2.3;p2.15">The aim of the system was primarily to increase efficiency and productivity by handling greater volumes of books and speeding up their delivery of books to the correct outlets. </s>
<s n="s3.3;p2.15">However, this backfired, causing disastrous effects for themselves and many book outlets across the UK. </s>
</p>
<p n="p3.15">
<s n="s1.4;p3.15">The system was designed to give each book a stock-movement ticket to specify where the books were positioned in the warehouse and this would allow for an electronic map of the warehouse to be produced. </s>
<s n="s2.4;p3.15">When an order was programmed in, the system would provide the most efficient way for the staff to pick up the books (using this map) and then placing them on a conveyor belt. </s>
<s n="s3.4;p3.15">The books were weighed and packed into suitable boxes according to their weight and the size of the order. </s>
<s n="s4.4;p3.15">It was a very clear process that wasn't overambitious, which has been the cause of many other failed IT projects. </s>
</p>
<p n="p4.15">
<s n="s1.6;p4.15">For a system to be successful, it needs to have clear requirements; if the requirements aren't adequate, then the product will not be what the end user expects, and will result in a failed project. </s>
<s n="s2.6;p4.15">The functional requirements were clearly stated in detail early on in the development but they weren't complete. </s>
<s n="s3.6;p4.15">They didn't highlight the fact that the books loose moisture when in the warehouse and therefore weigh less than the computer expects, and this resulted in the rejection of consignments and incomplete orders. </s>
<s n="s4.6;p4.15">The non-functional requirements were somewhat overlooked such as the timing of orders. </s>
<s n="s5.6;p4.15">It was not considered that the Tiptree warehouse staff would not always complete the order in the time predicted by the computer, causing a backlog which could take hours to catch up with. </s>
<s n="s6.6;p4.15">The requirements were not clear at the start of development, and although they weren't contradictory nor were they ambiguous, they didn't seem to be complete as not all circumstances were allowed for. </s>
</p>
<p n="p5.15">
<s n="s1.2;p5.15">The waterfall model was used to create the system software and worked well as the final results were good because the system did meet the requirements even though they were not entirely correct to start with. </s>
<s n="s2.2;p5.15">The waterfall model was thought suitable for this development as it is a logical process and entails a lot of unit and system testing which was infact carried out by Tiptree to ensure that failure wasn't possible. </s>
</p>
<p n="p6.15">
<s n="s1.5;p6.15">Top-down integration testing was used to test the complete system and sub-systems, as it is a good way to discover errors in the systems architecture which is crucial for the operation of the new system. </s>
<s n="s2.5;p6.15">In fact the system was tested in an almost live environment with every aspect of the hardware, software, interfaces and warehouse equipment functioning as it would when the system went live. </s>
<s n="s3.5;p6.15">However, more time should have been devoted to structural testing to identify possible test cases for the system that would test the system's capabilities and not just that of the components. </s>
<s n="s4.5;p6.15">If more had been done in this area the developers may have introduced schemes to cater for human error, and have anticipated all the possible knock on effects the errors would cause for the company. </s>
<s n="s5.5;p6.15">It is fair to say however that even if the system is known well, it is hard to account for every instance in which something may go wrong. </s>
</p>
<p n="p7.15">
<s n="s1.6;p7.15">As it happened, the system wasn't fully understood by the staff because Tiptree struggled to find the time to train them properly due to rigorous testing, and so they didn't appreciate the major changes in attitude and processes that would accompany the introduction of computers. </s>
<s n="s2.6;p7.15">The staff foolishly believed they could 'cut corners' when necessary; but they couldn't. </s>
<s n="s3.6;p7.15">If a book was taken to fill an order from the pallet not indicated by the computer, the computer would think that the book was out of stock when infact it was still on the shelf, leading to the electronic map becoming useless as nothing was where it was supposed to be. </s>
<s n="s4.6;p7.15">It then took longer than the two hour time period allowed by the computer for the order to be fulfilled and the books were marked out of stock and people didn't get their orders. </s>
<s n="s5.6;p7.15">On top of this, unforeseen error messages were appearing that further confused staff as they tried to deal with other problems. </s>
<s n="s6.6;p7.15">The system proved to be too reliant on human consistency and it failed. </s>
</p>
<p n="p8.15">
<s n="s1.7;p8.15">Unfortunately Tiptree didn't have a contingency plan to fall back on as they had too much confidence in the success of the project, and believed that as it had been heavily tested and worked fine, nothing could go wrong. </s>
<s n="s2.7;p8.15">Tiptree may have been able to get away with not having a backup plan if they had used a form of incremental implementation whereby small parts of the system could be put into use, one at a time without taking the entire old system out of operation and being left with nothing if everything goes wrong. </s>
<s n="s3.7;p8.15">But Tiptree foolishly took the old system offline and put the new 'improved' system straight into use and paid a heavy price for it. </s>
<s n="s4.7;p8.15">When operating under a complete transition like Tiptree did, it is sensible to have the old system running in parallel to the new one so that you have a backup available if things do not go as originally planned. </s>
<s n="s5.7;p8.15">Infact an incremental development process may have been more suitable to use in this instance as it can accommodate for change, whereas the waterfall model can't. </s>
<s n="s6.7;p8.15">Once a system has been developed using the waterfall model, and it is up and running, although it offers maintenance, it is inflexible in partitioning the project into distinct stages and it is therefore difficult to respond to a change in customer requirements. </s>
<s n="s7.7;p8.15">Incremental development on the other hand does offer the opportunity for change as only one part of the functionality is delivered at a time, and if it doesn't operate as originally intended, the team can go back, alter it, and then implement the system again as the process model contains a loop. </s>
</p>
<p n="p9.15">
<s n="s1.4;p9.15">Even though change wouldn't have helped Tiptree out of the backlog crisis as there obviously wasn't the time to adjust the system, the system would inevitably have to be altered eventually so that it could operate properly in the future to try and regain its status as the top UK distributor. </s>
<s n="s2.4;p9.15">To clear this backlog, Tiptree organised a treble shift and set up a hotline that which helped a great deal, and by January 1994, many of the problems had been resolved. </s>
<s n="s3.4;p9.15">Several publishers planned to seek compensation for lost orders and their costs and Virgin had already submitted a claim by October 1993. </s>
<s n="s4.4;p9.15">Another publisher spoke about claiming compensation running into millions, but in the end this and other disputes were settled by negotiation. </s>
</p>
<p n="p10.15">
<s n="s1.5;p10.15">The Tiptree system used client-server architecture as data distribution is straightforward, it makes effective use of networked systems and therefore requires cheaper hardware, and it is easy to upgrade or replace servers. </s>
<s n="s2.5;p10.15">It was suitable to use as all clients in the warehouse could access the server and put together the orders as necessary. </s>
<s n="s3.5;p10.15">However, it was a centrally controlled system whereby one sub-system takes responsibility for managing all other sub-systems. </s>
<s n="s4.5;p10.15">It is not always wise to implement centralised control because giving all the responsibility to one sub-system is dangerous because if that control system becomes faulty, every other sub-system it is controlling does too and the entire system will stop, resulting in a backlog of orders. </s>
<s n="s5.5;p10.15">With this problem always being an issue, and not having another system running in parallel, it proved unwise to implement a centralised control system. </s>
</p>
<p n="p11.15">
<s n="s1.5;p11.15">An event driven system would have been better as they are driven by externally generated events where the timing of the event is out with the control of the sub-system which processes the event. </s>
<s n="s2.5;p11.15">This means that if one sub-system malfunctions then the other can still operate giving the company a lifeline whilst the other is repaired. </s>
<s n="s3.5;p11.15">The event driven system has in effect a back up plan and a contingency plan would not have been entirely necessary. </s>
<s n="s4.5;p11.15">A broadcast model would have been ideal as sub-systems register interest in a specific event, and the control is transferred over to the sub-system to handle that event. </s>
<s n="s5.5;p11.15">It is a perfect method for processing orders within a given time limit as each sub-system has partial independence. </s>
</p>
<p n="p12.15">
<s n="s1.2;p12.15">The failure of the Tiptree system wasn't just about an unsuitable system architecture, it equally came down to naivety on the part of the Tiptree directors assumed that just because they had seen a similar system working perfectly in the USA and France, that it would work for them also; but every business is different and no two systems can be the same. </s>
<s n="s2.2;p12.15">Systems can run on different operating systems with different hardware that has been tested by different quality controls, which is not apparent to a director but can be recognised by the trained eye. </s>
</p>
<p n="p13.15">
<s n="s1.3;p13.15">Tiptree knew the system had to work very well because if the warehouse was shut down for a period, due to technical problems, then the consequences would affect many other businesses across the UK probably making them liable for compensation claims. </s>
<s n="s2.3;p13.15">Despite knowing these consequences, the system was a failure as it didn't increase productivity as the wrong books were sent out and orders were missed, and the backlogging didn't improve efficiency. </s>
<s n="s3.3;p13.15">Tiptree went from being the best distributor to the worst in a very short period of time. </s>
</p>
<p n="p14.15">
<s n="s1.4;p14.15">The system Tiptree decided to implement would have worked very well if it wasn't so susceptible to human error and the reliance on the electronic map being totally accurate. </s>
<s n="s2.4;p14.15">This could have been prevented with thorough structural testing, and better staff training, but these issues were possibly overlooked, maybe due to poor scheduling by the project manager, or having to meet a tight deadline. </s>
<s n="s3.4;p14.15">Even though the waterfall model design process was suitable for the development the project still failed as there was not any form of contingency plan, and it was foolish to put the new system in operation without a parallel system to fall back on. </s>
<s n="s4.4;p14.15">Other process models were available, but they believed that the system would be as successful in the UK as it was in the states because both systems used the same model. </s>
</p>
<p n="p15.15">
<s n="s1.1;p15.15">Unclear requirements, a system intolerant to human error, a non-existent backup plan, a poor transition to a misunderstood computer system and a questionable system architecture all contributed to the failure of the Tiptree system. </s>
</p>
</div1>
</body>
<back>
<div1 type="bibliography">
<head rend="underlined bold">References</head>
<p>Notes for the term</p>
<p>CRASH: Learning From The World's Worst Computer Disasters by Tony Collins </p>
<p>
<seg type="URL" n="http://www.scit.wlv.ac.uk/"/>
</p>
</div1>
</back>
</text>
</TEI.2>
