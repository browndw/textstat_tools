<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE TEI.2 SYSTEM "tei_bawe.dtd">
<TEI.2 id="_6103d" n="version 1.0">
<teiHeader>
<fileDesc>
<titleStmt>
<title>Computational Fluid Dynamics</title>
</titleStmt>
<extent/>
<publicationStmt>
<distributor>British Academic Written English (BAWE) corpus</distributor>
<availability>
<p>The British Academic Written English (BAWE) corpus was developed at the Universities of Warwick, Reading and Oxford Brookes, under the directorship of Hilary Nesi and Sheena Gardner (formerly of the Centre for Applied Linguistics [previously called CELTE], Warwick), Paul Thompson (Department of Applied Linguistics, Reading) and Paul Wickens (Westminster Institute of Education, Oxford Brookes), with funding from the ESRC. Subject to the rights of the these institutions in the BAWE corpus, and pursuant to the ESRC agreement, the BAWE corpus is available to researchers for research purposes PROVIDED THAT the following conditions are met:</p>
<p>1. The corpus files are not distributed in either their original form or in modified form.</p>
<p>2. The texts are used for research purposes only; they should not be reproduced in teaching materials.</p>
<p>3. The texts are not reproduced in full for a wider audience/readership, although researchers are free to quote short passages of text (up to 200 running words from any given text).</p>
<p>4. The BAWE corpus developers (contact: BAWE@warwick.ac.uk) are informed of all projects, dissertations, theses, presentations or publications arising from analysis of the corpus.</p>
<p>5. Researchers acknowledge their use of the corpus using the following form of words: "The data in this study come from the British Academic Written English (BAWE) corpus, which was developed at the Universities of Warwick, Reading and Oxford Brookes under the directorship of Hilary Nesi and Sheena Gardner (formerly of the Centre for Applied Linguistics [previously called CELTE], Warwick), Paul Thompson (Department of Applied Linguistics, Reading) and Paul Wickens (Westminster Institute of Education, Oxford Brookes), with funding from the ESRC (RES-000-23-0800)."</p>
</availability>
</publicationStmt>
<notesStmt>
<note resp="British Academic Written English (BAWE) corpus project">The document has a title page which contains:document titletitle part</note>
</notesStmt>
<sourceDesc>
<p n="level">3</p>
<p n="date">2005-06</p>
<p n="module title">Energy 3</p>
<p n="module code">CE3EB2</p>
<p n="genre family">Methodology recount</p>
<p n="discipline">Engineering</p>
<p n="disciplinary group">PS</p>
<p n="grade">D</p>
<p n="number of authors">1</p>
<p n="number of words">2466</p>
<p n="number of s-units">113</p>
<p n="number of p">27</p>
<p n="number of tables">0</p>
<p n="number of figures">31</p>
<p n="number of block quotes">0</p>
<p n="number of formulae">0</p>
<p n="number of lists">0</p>
<p n="number of paragraphs formatted like lists">0</p>
<p n="abstract present">no abstract</p>
<p n="average words per s-unit">21.8</p>
<p n="average s-units per p">4.2</p>
<p n="macrotype of assignment">simple assignment</p>
</sourceDesc>
</fileDesc>
<encodingDesc>
<p>TEI P4 (documented in: BAWE.documentation.pdf)</p>
</encodingDesc>
<profileDesc>
<particDesc>
<person>
<p n="gender">m</p>
<p n="year of birth">1983</p>
<p n="first language">Arabic</p>
<p n="education">UKa</p>
<p n="course">Mechanical Engineering</p>
<p n="student ID">6103</p>
</person>
</particDesc>
</profileDesc>
</teiHeader>
<text>
<front>
<titlePage>
<titlePart rend="bold">
<name type="university"/> PART 3: Mechanical Engineering</titlePart>
<docTitle>
<titlePart rend="bold">- Computational Fluid Dynamics -</titlePart>
</docTitle>
<titlePart>
<hi rend="bold">Date of report:</hi> 20/06/05 <hi rend="bold"> Date due:</hi> 30/06/05 <hi rend="bold"> By:</hi>
<name type="student name"/>
</titlePart>
</titlePage>
<div1 type="toc" n="2">
<head rend="bold">Contents</head>
<p/>
</div1>
</front>
<body>
<div1 type="section">
<head rend="bold">Introduction to CFD</head>
<div2>
<head rend="bold italic">Background</head>
<p n="p1.27">
<s n="s1.3;p1.27">Computational Fluid Dynamics (CFD) is a computer tool for simulating the behaviour of problems involving fluid flow, heat transfer and other physical processes. </s>
<s n="s2.3;p1.27">CFD achieves this by solving the equations of fluid flow over a region of interest. </s>
<s n="s3.3;p1.27">CFD can be used to evaluate the performance of a component during its design or it can be used to assess difficulties with existing designs and lead to their improvement. </s>
</p>
</div2>
<div2>
<head rend="bold italic">The process</head>
<p n="p2.27">
<s n="s1.1;p2.27">The process of forming a CFD simulation is divided into four components: </s>
</p>
<figure id="BAWE_6103d-fig.002"/>
<p n="p3.27">
<s n="s1.3;p3.27">The <hi rend="italic">first stage</hi> is in creating a geometry using ANSY Workbench which is needed in order to produce the required mesh. </s>
<s n="s2.3;p3.27">The workbench provides a number of drawing tools that are usually found in a CAD program for designing the solid. </s>
<s n="s3.3;p3.27">Once the geometry is made a surface mesh can be defined and produced. </s>
</p>
<p n="p4.27">
<s n="s1.2;p4.27">The <hi rend="italic">second stage</hi> is that of the pre-processor (using CFX-Pre) which allows the user to define the physics of the problem and create as well as tune a mesh to improve computational quality, accuracy and speed. </s>
<s n="s2.2;p4.27">Physics definition allows the specification of fluid properties and other materials in contact with it. </s>
</p>
<p n="p5.27">
<s n="s1.3;p5.27">The <hi rend="italic">third stage</hi> involves the solver (sing CFX-Solver), which is a collection of various algorithms and numerical techniques for performing the computational analysis of the previously specified problem. </s>
<s n="s2.3;p5.27">The solver converts the partial differential and boundary condition equations into a group of algebraic equations. </s>
<s n="s3.3;p5.27">The solutions to the boundary conditions are found by way of iteration. </s>
</p>
<p n="p6.27">
<s n="s1.3;p6.27">The <hi rend="italic">final stage</hi> is the post processor which enables the graphical illustration of the flow problem. </s>
<s n="s2.3;p6.27">This can take the form of contours, streamlines, vector plots and various other illustrations of the flow features. </s>
<s n="s3.3;p6.27">At this stage, the user is also able to tune the mesh, adjust boundary conditions and numerical parameters then view the results. </s>
</p>
</div2>
<div2>
<head rend="bold italic">Mathematics of CFD</head>
<p n="p7.27">
<s n="s1.3;p7.27">The physics of every fluid flow and heat transfer problem is governed by three main equations, namely: <hi rend="italic">mass conservation</hi>, <hi rend="italic">momentum conservation</hi> and <hi rend="italic">energy conservation</hi>, which may be expressed mathematically for the given initial and boundary conditions. </s>
<s n="s2.3;p7.27">CFD uses the finite <hi rend="italic">volume technique</hi> as its solution method. </s>
<s n="s3.3;p7.27">The solution obtained in CFD analysis for a flow problem represents the values of physical variables of the fluid flow, which is achieved by adjusting the relevant equations, dividing the fluid domain into a large number of cells or control volumes (called the mesh) and various other operations. </s>
</p>
</div2>
</div1>
<div1 type="section">
<head rend="bold">Tutorial 1</head>
<p n="p8.27">
<s n="s1.3;p8.27">The first stage involves creation of the geometry and meshing for the Static Mixer, which is carried out in <hi rend="bold">ANSYS Workbench</hi>. </s>
<s n="s2.3;p8.27">The solid is created (see Fig 1.1) using drawing objects contained in the Tree View panel and the 2D geometry is then revolved to create the 3D solid. </s>
<s n="s3.3;p8.27">Material can also be added on different planes by creating new sketches on the appropriate plane axis. </s>
</p>
<p n="p9.27">
<s n="s1.6;p9.27">Once the geometry is created, the mesh (Fig 1.2) can be set up in <hi rend="bold">CFX-Mesh</hi>. </s>
<s n="s2.6;p9.27">This is carried out by first defining 2D regions of the geometry which are later, using CFX-Pre, assigned boundary conditions. </s>
<s n="s3.6;p9.27">In this tutorial 3 regions were defined: <hi rend="italic">inlet1</hi>, <hi rend="italic">inlet2</hi> and <hi rend="italic">outlet</hi>. </s>
<s n="s4.6;p9.27">The next stage involves setting up the mesh by defining the size for the elements of the mesh. </s>
<s n="s5.6;p9.27">This example used a (coarse) spacing of 0.3 for the mesh. </s>
<s n="s6.6;p9.27">Finally, the volume mesh is generated and saved for use in CFX-Pre. </s>
</p>
<figure id="BAWE_6103d-fig.003">
<head rend="bold">Fig 1.1 Geometry </head>
</figure>
<figure id="BAWE_6103d-fig.004">
<head rend="bold">Fig 1.2 Mesh</head>
</figure>
<p n="p10.27">
<s n="s1.3;p10.27">The geometry can then be imported into <hi rend="bold">CFX-Pre</hi> which enables the user to specify the physics of the problem; including type of fluid, flow parameters and boundary conditions. </s>
<s n="s2.3;p10.27">Once the problem has been defined a definition file is written which is required for the CFD analysis in <hi rend="bold">CFX-Solver</hi>. </s>
<s n="s3.3;p10.27">Solver calculates the solution by way of iteration where successive iterations will produce more accurate solutions, this is called convergence (Fig 1.3). </s>
</p>
<figure id="BAWE_6103d-fig.005">
<head rend="bold">Fig 1.3 Convergence of Solution</head>
</figure>
<p n="p11.27">
<s n="s1.3;p11.27">A results file is created once the solver has finished the analysis, which is then loaded into <hi rend="bold">CFX-Post</hi> for viewing in graphical form. </s>
<s n="s2.3;p11.27">The flow pattern within the static mixer can be viewed by creating a point (which can be positioned anywhere within the mixer) for the origin of a streamline within the mixer. </s>
<s n="s3.3;p11.27">Different variables can be viewed such as pressure and temperature. </s>
</p>
<p n="p12.27">
<s n="s1.1;p12.27">The following streamline flow pattern (Fig 1.4) is for temperature, where water enters the inlet pipe at a high temperature (red) and leaves at a colder temperature (blue): </s>
</p>
<figure id="BAWE_6103d-fig.006">
<head rend="bold"> Fig 1.5 Streamline Simulation </head>
</figure>
<figure id="BAWE_6103d-fig.007">
<head rend="bold">Fig 1.6 Slice Plane for Temperature</head>
</figure>
<p n="p13.27">
<s n="s1.4;p13.27">A Slice Plane can is also created to view the flow pattern using different variables (temp. pressure etc.) at a cross section through the mixer, which is done by creating a new plane and defining its position using co-ordinates (Point and Normal method is used). </s>
<s n="s2.4;p13.27">The position of the plane can be re-adjusted using picking mode. </s>
<s n="s3.4;p13.27">Once parameters are defined the flow is made visible (Fig 1.6). </s>
<s n="s4.4;p13.27">Contours can also be viewed, which allow the user to more easily visualise points of equal values (or boundaries between different values/colours). </s>
</p>
<p n="p14.27">
<s n="s1.3;p14.27">The plot can then be animated so that the flow sweeps the geometry of the mixer (inlet to outlet). </s>
<s n="s2.3;p14.27">This is done using animation editor, which allows the user to define number of frames (minimum of two required) including details such as plane starting position, temperature range and number of intermediate frames (where more frames increase duration of the animation clip). </s>
<s n="s3.3;p14.27">This file is then saved in MPEG format and is therefore viewable using Windows Media Player© (see Fig 1.7). </s>
</p>
<figure id="BAWE_6103d-fig.008">
<head rend="bold">Fig 1.7 Viewing Animations in Windows Media Player</head>
</figure>
<div2>
<head rend="bold">Tutorial 2</head>
<p n="p15.27">
<s n="s1.3;p15.27">This tutorial modifies the geometry and mesh that were previously created. </s>
<s n="s2.3;p15.27">A refined mesh is created by reducing the maximum spacing and an inflated boundary is produced to provide a better resolution of the velocity near the wall therefore improving accuracy for the pipe geometry. </s>
<s n="s3.3;p15.27">It can be seen in Figure 2.1 that the new mesh is finer than the one initially created. </s>
</p>
<figure id="BAWE_6103d-fig.009">
<head rend="bold"> Fig 2.1 Finer Mesh </head>
</figure>
<figure id="BAWE_6103d-fig.010">
<head rend="bold">Fig 2.2 Modified Geometry</head>
</figure>
<p n="p16.27">
<s n="s1.6;p16.27">The next stage of the tutorial modifies the original geometry. </s>
<s n="s2.6;p16.27">This includes changing the pipe radius (to 0.4m) using the dimensioning feature and extending the outlet pipe. </s>
<s n="s3.6;p16.27">The extension requires the application of <hi rend="italic">revolve</hi> and <hi rend="italic">extrude</hi> features. </s>
<s n="s4.6;p16.27">Since these operations take place at the end of the outlet pipe a new plane is created and a corresponding sketch to provide the required reference for the new extrusions. </s>
<s n="s5.6;p16.27">Figure 2.2 shows the modified geometry. </s>
<s n="s6.6;p16.27">The latter part of the tutorial updates the geometry in CFX-Mesh so that the mesh corresponds to the modified geometry. </s>
</p>
<p n="p17.27">
<s n="s1.6;p17.27">The new mesh is imported into CFX-Pre under <hi rend="italic">general</hi> mode (for more complex problems). </s>
<s n="s2.6;p17.27">Since the physics for this simulation is similar to that used in Tutorial 1 the same settings are used by importing the relevant CCL file. </s>
<s n="s3.6;p17.27">The solver is then set for the new mesh with slight modifications to the parameters to provide greater solution accuracy. </s>
<s n="s4.6;p17.27">To achieve this increased number of iterations are used (solver time is increased). </s>
<s n="s5.6;p17.27">A slice plane is created (Fig 2.3) and compared to the slice created for the mesh in Tutorial 1. </s>
<s n="s6.6;p17.27">The main differences are 1) the inflated layer has produced prismatic elements that appear as rectangles around the edges; 2) more line because slice intersects more mesh elements; 3) smoother curve as the new mesh represents the geometry better. </s>
</p>
<figure id="BAWE_6103d-fig.011">
<head rend="bold">Fig 2.3 Finer Slice </head>
</figure>
<figure id="BAWE_6103d-fig.012">
<head rend="bold"> Fig 2.4 Inflated Elements in 3D. </head>
</figure>
<figure id="BAWE_6103d-fig.013">
<head rend="bold"> Fig 2.5 Vertical Slice </head>
</figure>
<p n="p18.27">
<s n="s1.4;p18.27">The inflated elements can be viewed in 3D by creating a volume. </s>
<s n="s2.4;p18.27">The volume is defined (point and radius) and elements contained in this volume can be made visible (Fig 2.4). </s>
<s n="s3.4;p18.27">Separate volumes are created to view the tetrahedral and prismatic elements. </s>
<s n="s4.4;p18.27">Inflated elements on main body of the mixer can also be made viewable by creating a slice through cross section of the mixer (Fig 2.5). </s>
</p>
</div2>
</div1>
<div1 type="section">
<head rend="bold">Tutorial 3</head>
<p n="p19.27">
<s n="s1.4;p19.27">This tutorial produces an injection mixer pipe. </s>
<s n="s2.4;p19.27">The main geometry is created using the <hi rend="italic">sweep</hi> operation which uses two schemes: one defines the profile to be swept and the other defines the path through which the profile is swept. </s>
<s n="s3.4;p19.27">A side pipe is created by adding a new plane based upon the <hi rend="italic">ZX</hi> plane (offset). </s>
<s n="s4.4;p19.27">The circle is extruded into the main pipe to produce the geometry in Fig 3.1. </s>
</p>
<figure id="BAWE_6103d-fig.014">
<head rend="bold">Fig 3.1 Pipe Geometry </head>
</figure>
<figure id="BAWE_6103d-fig.015">
<head rend="bold">Fig 3.2 Pipe Mesh</head>
</figure>
<p n="p20.27">
<s n="s1.6;p20.27">The first stage in creating the mesh is to set up 2D regions. </s>
<s n="s2.6;p20.27">Regions set up for the pipe are <hi rend="italic">side inlet</hi>, <hi rend="italic">main inlet</hi> and <hi rend="italic">outlet</hi>. </s>
<s n="s3.6;p20.27">The mesh spacing is then set using <hi rend="italic">body</hi> spacing to value of 0.25 m. </s>
<s n="s4.6;p20.27">For the side pipe a finer mesh is desired since flow here is smaller than max. body spacing. </s>
<s n="s5.6;p20.27">To produce a finer mesh for the side pipe, a <hi rend="italic">face</hi> spacing of 0.05 is set for this region (Fig 3.2). </s>
<s n="s6.6;p20.27">Finally, since velocity gradients near pipe wall can greatly vary, inflated layers are produced for this region. </s>
</p>
<figure id="BAWE_6103d-fig.016">
<head rend="bold"> Fig 3.3 Boundary Conditions </head>
</figure>
<figure id="BAWE_6103d-fig.017">
<head rend="bold"> Fig 3.4 Flow Re-circulation </head>
</figure>
<figure id="BAWE_6103d-fig.018">
<head rend="bold">Fig 3.5 Fluid Mix</head>
</figure>
<p n="p21.27">
<s n="s1.12;p21.27">The mesh is now imported into CFX-Pre. </s>
<s n="s2.12;p21.27">First, an expression for viscosity as a function of temperature is created which is used to modify properties of water. </s>
<s n="s3.12;p21.27">A list of expressions is made using <hi rend="italic">expression editor</hi> which can be plotted and evaluated. </s>
<s n="s4.12;p21.27">Properties of water are then modified using these expressions and a domain is created defining the physics and fluid model to be used. </s>
<s n="s5.12;p21.27">Boundary conditions can then be created for <hi rend="italic">side inlet</hi>, <hi rend="italic">main inlet</hi> and <hi rend="italic">outlet</hi> regions of the pipe (Fig 3.3). </s>
<s n="s6.12;p21.27">The solver is then set for a maximum number of 50 iterations and initiated. </s>
<s n="s7.12;p21.27">Once solver is complete, CFX-Post is used to simulate flow. </s>
<s n="s8.12;p21.27">A streamline to examine velocity from main inlet is first created. </s>
<s n="s9.12;p21.27">It can be seen that flow tends to re-circulate near bottom of the vertical section of the main pipe (Fig 3.4). </s>
<s n="s10.12;p21.27">In order to investigate how well fluid from the side inlet mixes with fluid from main inlet, a streamline with constant colour is created. </s>
<s n="s11.12;p21.27">A modified duplicate of the streamline is also created for flow starting at the side inlet. </s>
<s n="s12.12;p21.27">The result is shown in Fig 3.5. </s>
</p>
</div1>
<div1 type="section">
<head rend="bold">Tutorial 5</head>
<p n="p22.27">
<s n="s1.4;p22.27">In this tutorial a geometry and mesh is created for a simulation of flow over a vehicle. </s>
<s n="s2.4;p22.27">The shape of the blunt body is drawn using features from the draw menu and the solid is generated by extrusion to a specific depth (Fig 5.1). </s>
<s n="s3.4;p22.27">A rectangular box is then created around the blunt body to form the region of flow. </s>
<s n="s4.4;p22.27">The blunt body must be frozen to avoid merging of the two solids and the blunt body can then be cut from the rectangle using Create > Body Operation (see Fig 5.2) </s>
</p>
<figure id="BAWE_6103d-fig.019">
<head rend="bold"> Fig 5.1 Blunt Body Geometry </head>
</figure>
<figure id="BAWE_6103d-fig.020">
<head rend="bold">Fig 5.2 Flow Geometry around Blunt Body</head>
</figure>
<p n="p23.27">
<s n="s1.4;p23.27">Once the geometry is created, the mesh can be created. </s>
<s n="s2.4;p23.27">The first step is to set up regions for defining boundaries later in CFX-Pre. </s>
<s n="s3.4;p23.27">Six regions are defined of which is a separate region for the blunt body to allow local visualisation and mesh control. </s>
<s n="s4.4;p23.27">Mesh spacing for the rectangular face is then defined in the normal way and a finer mesh is set up around the surfaces of the blunt body (as this is the region of interest) by inserting a Face Spacing for the 'Body', region as shown in Fig 5.3. </s>
</p>
<figure id="BAWE_6103d-fig.021">
<head rend="bold">Fig 5.3 course mesh for symmetry plane and finer mesh around blunt body (area of interest)</head>
</figure>
<p n="p24.27">
<s n="s1.5;p24.27">A thin layer of prismatic elements (5 layers) is then produced around the external surface of the body and ground using the <hi rend="italic">Inflation</hi> feature. </s>
<s n="s2.5;p24.27">However, it is found that the specified number of inflated layers is not produced (see Fig 5.5). </s>
<s n="s3.5;p24.27">This is because the gap between body and ground is only 2 elements thick and does not accommodate the number of required layers. </s>
<s n="s4.5;p24.27">This problem is overcome using the <hi rend="italic">Surface Proximity</hi> feature which detects close surfaces and refines the mesh in this region to minimum number of mesh elements enabling a higher quality mesh for the geometry (see Fig 5.6). </s>
<s n="s5.5;p24.27">Once required settings are made the mesh can be generated. </s>
</p>
<figure id="BAWE_6103d-fig.022">
<head rend="bold"> Fig 5.4 Before Inflation </head>
</figure>
<figure id="BAWE_6103d-fig.023">
<head rend="bold">Fig 5.5 After Inflation </head>
</figure>
<figure id="BAWE_6103d-fig.024">
<head rend="bold">Fig 5.6 Surface Proximity </head>
</figure>
<p n="p25.27">
<s n="s1.5;p25.27">The mesh is now imported into CFX-Pre and a turbulent/isothermal flow domain for the body is created. </s>
<s n="s2.5;p25.27">A <hi rend="italic">union</hi> between two regions requiring a free slip wall boundary condition is made for regions <hi rend="italic">Free1</hi> and <hi rend="italic">Free2,</hi> and boundary conditions for the remaining 2D regions created. </s>
<s n="s3.5;p25.27">The top and side surfaces use <hi rend="italic">free slip</hi> wall boundaries and the blunt body surface uses a <hi rend="italic">no slip</hi> boundary condition while the bottom surface uses an <hi rend="italic">adiabatic no-sli</hi>p wall condition. </s>
<s n="s4.5;p25.27">The solver is then set on <hi rend="italic">high resolution</hi> for a maximum number of <hi rend="italic">60</hi> iterations. </s>
<s n="s5.5;p25.27">At this stage the solving process can be divided between two processors to (parallel solver) to reduce the duration of the solving process. </s>
</p>
<figure id="BAWE_6103d-fig.025">
<head rend="bold"> 5.7 Full Geometry </head>
</figure>
<figure id="BAWE_6103d-fig.026">
<head>
<hi rend="bold">Fig 5.8 Vector Plot</hi> (shows vectors and recirculation)</head>
</figure>
<p n="p26.27">
<s n="s1.4;p26.27">CFD results calculated using half of geometry due to the symmetry. </s>
<s n="s2.4;p26.27">But for visualisation purposes full geometry can be used by creating an <hi rend="italic">Instance Transform</hi> (Fig 5.7). </s>
<s n="s3.4;p26.27">A vector plot also created to show velocity vectors behind the blunt body by creating a plane to locate region of interest (Fig 5.8). </s>
<s n="s4.4;p26.27">Finally, a surface plot of <hi rend="italic">Yplus</hi> created to indicate closeness of first node to the wall (Fig 5.9) and <hi rend="italic">Power Syntax Macro</hi> is used to evaluate variation of variables in the direction of the X-axis (Fig 5.10). </s>
</p>
<figure id="BAWE_6103d-fig.027">
<head rend="bold"> Fig 5.9 Surface (Y+) Plot </head>
</figure>
<figure id="BAWE_6103d-fig.028">
<head rend="bold">Fig 5.10 Power Syntax Macro (animation)</head>
</figure>
</div1>
<div1 type="section">
<head rend="bold">Tutorial 14</head>
<p n="p27.27">
<s n="s1.9;p27.27">This tutorial focuses on use of CFX-Mesh features in fixing poor CAD geometry's to produce good quality mesh. </s>
<s n="s2.9;p27.27">The geometry used contains many bad surfaces and short edges. </s>
<s n="s3.9;p27.27">These features give surface mesh with poor angles and short faces will cause regions with very fine mesh (Fig 14.1). </s>
<s n="s4.9;p27.27">Such inconsistencies are automatically detected under <hi rend="italic">errors</hi>, for this geometry there are 8 known errors. </s>
<s n="s5.9;p27.27">The initial step in improving the geometry is to create <hi rend="italic">Virtual Faces</hi> to fix irregularities by combining several faces to make single faces. </s>
<s n="s6.9;p27.27">A means of ridding the geometry of short edges is the <hi rend="italic">Virtual Edges</hi> feature, which merges existing edges. </s>
<s n="s7.9;p27.27">The effect of creating virtual edges is illustrated in the re-generated mesh (Fig 14.2). </s>
<s n="s8.9;p27.27">Another way to get rid of short edges is <hi rend="italic">Short Edge Remova</hi>l, which removes short edges by collapsing them to a single point. </s>
<s n="s9.9;p27.27">These adjustments result in a decrease in the number of errors detected and better quality mesh (Fig 14.3) </s>
</p>
<figure id="BAWE_6103d-fig.029">
<head rend="bold"> Fig 14.1 Poor Mesh </head>
</figure>
<figure id="BAWE_6103d-fig.030">
<head rend="bold"> Fig 14.2 Improved Mesh </head>
</figure>
<figure id="BAWE_6103d-fig.031">
<head>Fig 14.3 Best Mesh</head>
</figure>
</div1>
</body>
<back/>
</text>
</TEI.2>
